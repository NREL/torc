# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""workflow_specifications_schedulers

    WorkflowSpecificationsSchedulers(;
        aws_schedulers=nothing,
        local_schedulers=nothing,
        slurm_schedulers=nothing,
    )

    - aws_schedulers::Vector{AwsSchedulersModel}
    - local_schedulers::Vector{LocalSchedulersModel}
    - slurm_schedulers::Vector{SlurmSchedulersModel}
"""
Base.@kwdef mutable struct WorkflowSpecificationsSchedulers <: OpenAPI.APIModel
    aws_schedulers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{AwsSchedulersModel} }
    local_schedulers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{LocalSchedulersModel} }
    slurm_schedulers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{SlurmSchedulersModel} }

    function WorkflowSpecificationsSchedulers(aws_schedulers, local_schedulers, slurm_schedulers, )
        OpenAPI.validate_property(WorkflowSpecificationsSchedulers, Symbol("aws_schedulers"), aws_schedulers)
        OpenAPI.validate_property(WorkflowSpecificationsSchedulers, Symbol("local_schedulers"), local_schedulers)
        OpenAPI.validate_property(WorkflowSpecificationsSchedulers, Symbol("slurm_schedulers"), slurm_schedulers)
        return new(aws_schedulers, local_schedulers, slurm_schedulers, )
    end
end # type WorkflowSpecificationsSchedulers

const _property_types_WorkflowSpecificationsSchedulers = Dict{Symbol,String}(Symbol("aws_schedulers")=>"Vector{AwsSchedulersModel}", Symbol("local_schedulers")=>"Vector{LocalSchedulersModel}", Symbol("slurm_schedulers")=>"Vector{SlurmSchedulersModel}", )
OpenAPI.property_type(::Type{ WorkflowSpecificationsSchedulers }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WorkflowSpecificationsSchedulers[name]))}

function check_required(o::WorkflowSpecificationsSchedulers)
    true
end

function OpenAPI.validate_property(::Type{ WorkflowSpecificationsSchedulers }, name::Symbol, val)
end
