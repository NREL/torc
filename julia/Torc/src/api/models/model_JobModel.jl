# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""job_model

    JobModel(;
        name=nothing,
        command=nothing,
        invocation_script=nothing,
        status=nothing,
        needs_compute_node_schedule=false,
        cancel_on_blocking_job_failure=true,
        supports_termination=false,
        blocked_by=nothing,
        input_files=nothing,
        output_files=nothing,
        input_user_data=nothing,
        output_user_data=nothing,
        resource_requirements=nothing,
        scheduler=nothing,
        internal=nothing,
        _key=nothing,
        _id=nothing,
        _rev=nothing,
    )

    - name::String
    - command::String
    - invocation_script::String
    - status::String
    - needs_compute_node_schedule::Bool
    - cancel_on_blocking_job_failure::Bool
    - supports_termination::Bool
    - blocked_by::Vector{String}
    - input_files::Vector{String}
    - output_files::Vector{String}
    - input_user_data::Vector{String}
    - output_user_data::Vector{String}
    - resource_requirements::String
    - scheduler::String
    - internal::JobsInternal
    - _key::String
    - _id::String
    - _rev::String
"""
Base.@kwdef mutable struct JobModel <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    command::Union{Nothing, String} = nothing
    invocation_script::Union{Nothing, String} = nothing
    status::Union{Nothing, String} = nothing
    needs_compute_node_schedule::Union{Nothing, Bool} = false
    cancel_on_blocking_job_failure::Union{Nothing, Bool} = true
    supports_termination::Union{Nothing, Bool} = false
    blocked_by::Union{Nothing, Vector{String}} = nothing
    input_files::Union{Nothing, Vector{String}} = nothing
    output_files::Union{Nothing, Vector{String}} = nothing
    input_user_data::Union{Nothing, Vector{String}} = nothing
    output_user_data::Union{Nothing, Vector{String}} = nothing
    resource_requirements::Union{Nothing, String} = nothing
    scheduler::Union{Nothing, String} = nothing
    internal = nothing # spec type: Union{ Nothing, JobsInternal }
    _key::Union{Nothing, String} = nothing
    _id::Union{Nothing, String} = nothing
    _rev::Union{Nothing, String} = nothing

    function JobModel(name, command, invocation_script, status, needs_compute_node_schedule, cancel_on_blocking_job_failure, supports_termination, blocked_by, input_files, output_files, input_user_data, output_user_data, resource_requirements, scheduler, internal, _key, _id, _rev, )
        OpenAPI.validate_property(JobModel, Symbol("name"), name)
        OpenAPI.validate_property(JobModel, Symbol("command"), command)
        OpenAPI.validate_property(JobModel, Symbol("invocation_script"), invocation_script)
        OpenAPI.validate_property(JobModel, Symbol("status"), status)
        OpenAPI.validate_property(JobModel, Symbol("needs_compute_node_schedule"), needs_compute_node_schedule)
        OpenAPI.validate_property(JobModel, Symbol("cancel_on_blocking_job_failure"), cancel_on_blocking_job_failure)
        OpenAPI.validate_property(JobModel, Symbol("supports_termination"), supports_termination)
        OpenAPI.validate_property(JobModel, Symbol("blocked_by"), blocked_by)
        OpenAPI.validate_property(JobModel, Symbol("input_files"), input_files)
        OpenAPI.validate_property(JobModel, Symbol("output_files"), output_files)
        OpenAPI.validate_property(JobModel, Symbol("input_user_data"), input_user_data)
        OpenAPI.validate_property(JobModel, Symbol("output_user_data"), output_user_data)
        OpenAPI.validate_property(JobModel, Symbol("resource_requirements"), resource_requirements)
        OpenAPI.validate_property(JobModel, Symbol("scheduler"), scheduler)
        OpenAPI.validate_property(JobModel, Symbol("internal"), internal)
        OpenAPI.validate_property(JobModel, Symbol("_key"), _key)
        OpenAPI.validate_property(JobModel, Symbol("_id"), _id)
        OpenAPI.validate_property(JobModel, Symbol("_rev"), _rev)
        return new(name, command, invocation_script, status, needs_compute_node_schedule, cancel_on_blocking_job_failure, supports_termination, blocked_by, input_files, output_files, input_user_data, output_user_data, resource_requirements, scheduler, internal, _key, _id, _rev, )
    end
end # type JobModel

const _property_types_JobModel = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("command")=>"String", Symbol("invocation_script")=>"String", Symbol("status")=>"String", Symbol("needs_compute_node_schedule")=>"Bool", Symbol("cancel_on_blocking_job_failure")=>"Bool", Symbol("supports_termination")=>"Bool", Symbol("blocked_by")=>"Vector{String}", Symbol("input_files")=>"Vector{String}", Symbol("output_files")=>"Vector{String}", Symbol("input_user_data")=>"Vector{String}", Symbol("output_user_data")=>"Vector{String}", Symbol("resource_requirements")=>"String", Symbol("scheduler")=>"String", Symbol("internal")=>"JobsInternal", Symbol("_key")=>"String", Symbol("_id")=>"String", Symbol("_rev")=>"String", )
OpenAPI.property_type(::Type{ JobModel }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_JobModel[name]))}

function check_required(o::JobModel)
    o.command === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ JobModel }, name::Symbol, val)
end
