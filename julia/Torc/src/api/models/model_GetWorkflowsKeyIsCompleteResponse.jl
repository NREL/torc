# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""get_workflows_key_is_complete_response

    GetWorkflowsKeyIsCompleteResponse(;
        is_canceled=nothing,
        is_complete=nothing,
    )

    - is_canceled::Bool
    - is_complete::Bool
"""
Base.@kwdef mutable struct GetWorkflowsKeyIsCompleteResponse <: OpenAPI.APIModel
    is_canceled::Union{Nothing, Bool} = nothing
    is_complete::Union{Nothing, Bool} = nothing

    function GetWorkflowsKeyIsCompleteResponse(is_canceled, is_complete, )
        OpenAPI.validate_property(GetWorkflowsKeyIsCompleteResponse, Symbol("is_canceled"), is_canceled)
        OpenAPI.validate_property(GetWorkflowsKeyIsCompleteResponse, Symbol("is_complete"), is_complete)
        return new(is_canceled, is_complete, )
    end
end # type GetWorkflowsKeyIsCompleteResponse

const _property_types_GetWorkflowsKeyIsCompleteResponse = Dict{Symbol,String}(Symbol("is_canceled")=>"Bool", Symbol("is_complete")=>"Bool", )
OpenAPI.property_type(::Type{ GetWorkflowsKeyIsCompleteResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetWorkflowsKeyIsCompleteResponse[name]))}

function check_required(o::GetWorkflowsKeyIsCompleteResponse)
    o.is_canceled === nothing && (return false)
    o.is_complete === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetWorkflowsKeyIsCompleteResponse }, name::Symbol, val)
end
