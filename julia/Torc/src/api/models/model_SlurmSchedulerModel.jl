# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""slurm_scheduler_model
Data model for Slurm scheduler

    SlurmSchedulerModel(;
        name=nothing,
        account=nothing,
        gres=nothing,
        mem=nothing,
        nodes=nothing,
        ntasks_per_node=nothing,
        partition=nothing,
        qos="normal",
        tmp=nothing,
        walltime=nothing,
        extra=nothing,
        _key=nothing,
        _id=nothing,
        _rev=nothing,
    )

    - name::String : Name of the scheduler
    - account::String : Slurm account ID
    - gres::String : Generic resource requirement
    - mem::String : Compute node memory requirement
    - nodes::Int64 : Number of nodes for the Slurm allocation
    - ntasks_per_node::Int64 : Number of tasks to invoke on each node
    - partition::String : Compute node partition; likely not necessary because Slurm should optimize it.
    - qos::String : Priority of Slurm job
    - tmp::String : Compute node local storage size requirement
    - walltime::String : Slurm runtime requirement, e.g., 04:00:00
    - extra::String : Extra Slurm parameters that torc will append to the sbatch command
    - _key::String
    - _id::String
    - _rev::String
"""
Base.@kwdef mutable struct SlurmSchedulerModel <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    account::Union{Nothing, String} = nothing
    gres::Union{Nothing, String} = nothing
    mem::Union{Nothing, String} = nothing
    nodes::Union{Nothing, Int64} = nothing
    ntasks_per_node::Union{Nothing, Int64} = nothing
    partition::Union{Nothing, String} = nothing
    qos::Union{Nothing, String} = "normal"
    tmp::Union{Nothing, String} = nothing
    walltime::Union{Nothing, String} = nothing
    extra::Union{Nothing, String} = nothing
    _key::Union{Nothing, String} = nothing
    _id::Union{Nothing, String} = nothing
    _rev::Union{Nothing, String} = nothing

    function SlurmSchedulerModel(name, account, gres, mem, nodes, ntasks_per_node, partition, qos, tmp, walltime, extra, _key, _id, _rev, )
        OpenAPI.validate_property(SlurmSchedulerModel, Symbol("name"), name)
        OpenAPI.validate_property(SlurmSchedulerModel, Symbol("account"), account)
        OpenAPI.validate_property(SlurmSchedulerModel, Symbol("gres"), gres)
        OpenAPI.validate_property(SlurmSchedulerModel, Symbol("mem"), mem)
        OpenAPI.validate_property(SlurmSchedulerModel, Symbol("nodes"), nodes)
        OpenAPI.validate_property(SlurmSchedulerModel, Symbol("ntasks_per_node"), ntasks_per_node)
        OpenAPI.validate_property(SlurmSchedulerModel, Symbol("partition"), partition)
        OpenAPI.validate_property(SlurmSchedulerModel, Symbol("qos"), qos)
        OpenAPI.validate_property(SlurmSchedulerModel, Symbol("tmp"), tmp)
        OpenAPI.validate_property(SlurmSchedulerModel, Symbol("walltime"), walltime)
        OpenAPI.validate_property(SlurmSchedulerModel, Symbol("extra"), extra)
        OpenAPI.validate_property(SlurmSchedulerModel, Symbol("_key"), _key)
        OpenAPI.validate_property(SlurmSchedulerModel, Symbol("_id"), _id)
        OpenAPI.validate_property(SlurmSchedulerModel, Symbol("_rev"), _rev)
        return new(name, account, gres, mem, nodes, ntasks_per_node, partition, qos, tmp, walltime, extra, _key, _id, _rev, )
    end
end # type SlurmSchedulerModel

const _property_types_SlurmSchedulerModel = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("account")=>"String", Symbol("gres")=>"String", Symbol("mem")=>"String", Symbol("nodes")=>"Int64", Symbol("ntasks_per_node")=>"Int64", Symbol("partition")=>"String", Symbol("qos")=>"String", Symbol("tmp")=>"String", Symbol("walltime")=>"String", Symbol("extra")=>"String", Symbol("_key")=>"String", Symbol("_id")=>"String", Symbol("_rev")=>"String", )
OpenAPI.property_type(::Type{ SlurmSchedulerModel }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SlurmSchedulerModel[name]))}

function check_required(o::SlurmSchedulerModel)
    o.account === nothing && (return false)
    o.nodes === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ SlurmSchedulerModel }, name::Symbol, val)
end
