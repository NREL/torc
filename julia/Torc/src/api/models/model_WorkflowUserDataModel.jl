# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""workflow_user_data_model

    WorkflowUserDataModel(;
        is_ephemeral=false,
        name=nothing,
        data=nothing,
        _key=nothing,
        _id=nothing,
        _rev=nothing,
    )

    - is_ephemeral::Bool
    - name::String
    - data::Any
    - _key::String
    - _id::String
    - _rev::String
"""
Base.@kwdef mutable struct WorkflowUserDataModel <: OpenAPI.APIModel
    is_ephemeral::Union{Nothing, Bool} = false
    name::Union{Nothing, String} = nothing
    data::Union{Nothing, Any} = nothing
    _key::Union{Nothing, String} = nothing
    _id::Union{Nothing, String} = nothing
    _rev::Union{Nothing, String} = nothing

    function WorkflowUserDataModel(is_ephemeral, name, data, _key, _id, _rev, )
        OpenAPI.validate_property(WorkflowUserDataModel, Symbol("is_ephemeral"), is_ephemeral)
        OpenAPI.validate_property(WorkflowUserDataModel, Symbol("name"), name)
        OpenAPI.validate_property(WorkflowUserDataModel, Symbol("data"), data)
        OpenAPI.validate_property(WorkflowUserDataModel, Symbol("_key"), _key)
        OpenAPI.validate_property(WorkflowUserDataModel, Symbol("_id"), _id)
        OpenAPI.validate_property(WorkflowUserDataModel, Symbol("_rev"), _rev)
        return new(is_ephemeral, name, data, _key, _id, _rev, )
    end
end # type WorkflowUserDataModel

const _property_types_WorkflowUserDataModel = Dict{Symbol,String}(Symbol("is_ephemeral")=>"Bool", Symbol("name")=>"String", Symbol("data")=>"Any", Symbol("_key")=>"String", Symbol("_id")=>"String", Symbol("_rev")=>"String", )
OpenAPI.property_type(::Type{ WorkflowUserDataModel }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WorkflowUserDataModel[name]))}

function check_required(o::WorkflowUserDataModel)
    true
end

function OpenAPI.validate_property(::Type{ WorkflowUserDataModel }, name::Symbol, val)
end
