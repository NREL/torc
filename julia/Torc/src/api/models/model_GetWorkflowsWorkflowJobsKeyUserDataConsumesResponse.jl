# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""get_workflows_workflow_jobs_key_user_data_consumes_response

    GetWorkflowsWorkflowJobsKeyUserDataConsumesResponse(;
        items=nothing,
        skip=nothing,
        max_limit=nothing,
        count=nothing,
        total_count=nothing,
        has_more=nothing,
    )

    - items::Vector{WorkflowUserDataModel}
    - skip::Int64
    - max_limit::Int64
    - count::Int64
    - total_count::Int64
    - has_more::Bool
"""
Base.@kwdef mutable struct GetWorkflowsWorkflowJobsKeyUserDataConsumesResponse <: OpenAPI.APIModel
    items::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{WorkflowUserDataModel} }
    skip::Union{Nothing, Int64} = nothing
    max_limit::Union{Nothing, Int64} = nothing
    count::Union{Nothing, Int64} = nothing
    total_count::Union{Nothing, Int64} = nothing
    has_more::Union{Nothing, Bool} = nothing

    function GetWorkflowsWorkflowJobsKeyUserDataConsumesResponse(items, skip, max_limit, count, total_count, has_more, )
        OpenAPI.validate_property(GetWorkflowsWorkflowJobsKeyUserDataConsumesResponse, Symbol("items"), items)
        OpenAPI.validate_property(GetWorkflowsWorkflowJobsKeyUserDataConsumesResponse, Symbol("skip"), skip)
        OpenAPI.validate_property(GetWorkflowsWorkflowJobsKeyUserDataConsumesResponse, Symbol("max_limit"), max_limit)
        OpenAPI.validate_property(GetWorkflowsWorkflowJobsKeyUserDataConsumesResponse, Symbol("count"), count)
        OpenAPI.validate_property(GetWorkflowsWorkflowJobsKeyUserDataConsumesResponse, Symbol("total_count"), total_count)
        OpenAPI.validate_property(GetWorkflowsWorkflowJobsKeyUserDataConsumesResponse, Symbol("has_more"), has_more)
        return new(items, skip, max_limit, count, total_count, has_more, )
    end
end # type GetWorkflowsWorkflowJobsKeyUserDataConsumesResponse

const _property_types_GetWorkflowsWorkflowJobsKeyUserDataConsumesResponse = Dict{Symbol,String}(Symbol("items")=>"Vector{WorkflowUserDataModel}", Symbol("skip")=>"Int64", Symbol("max_limit")=>"Int64", Symbol("count")=>"Int64", Symbol("total_count")=>"Int64", Symbol("has_more")=>"Bool", )
OpenAPI.property_type(::Type{ GetWorkflowsWorkflowJobsKeyUserDataConsumesResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetWorkflowsWorkflowJobsKeyUserDataConsumesResponse[name]))}

function check_required(o::GetWorkflowsWorkflowJobsKeyUserDataConsumesResponse)
    o.skip === nothing && (return false)
    o.max_limit === nothing && (return false)
    o.count === nothing && (return false)
    o.total_count === nothing && (return false)
    o.has_more === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetWorkflowsWorkflowJobsKeyUserDataConsumesResponse }, name::Symbol, val)
end
