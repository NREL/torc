# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""file_model
Data model for files needed or produced by jobs. Can be data or code.

    FileModel(;
        name=nothing,
        path=nothing,
        st_mtime=nothing,
        _key=nothing,
        _id=nothing,
        _rev=nothing,
    )

    - name::String : User-defined name of the file (not necessarily the filename)
    - path::String : Path to the file; can be relative to the execution directory.
    - st_mtime::Float64 : Timestamp of when the file was last modified
    - _key::String : Unique database identifier for the file. Does not include collection name.
    - _id::String : Unique database identifier for the file. Includes collection name and _key.
    - _rev::String : Database revision of the file
"""
Base.@kwdef mutable struct FileModel <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    path::Union{Nothing, String} = nothing
    st_mtime::Union{Nothing, Float64} = nothing
    _key::Union{Nothing, String} = nothing
    _id::Union{Nothing, String} = nothing
    _rev::Union{Nothing, String} = nothing

    function FileModel(name, path, st_mtime, _key, _id, _rev, )
        OpenAPI.validate_property(FileModel, Symbol("name"), name)
        OpenAPI.validate_property(FileModel, Symbol("path"), path)
        OpenAPI.validate_property(FileModel, Symbol("st_mtime"), st_mtime)
        OpenAPI.validate_property(FileModel, Symbol("_key"), _key)
        OpenAPI.validate_property(FileModel, Symbol("_id"), _id)
        OpenAPI.validate_property(FileModel, Symbol("_rev"), _rev)
        return new(name, path, st_mtime, _key, _id, _rev, )
    end
end # type FileModel

const _property_types_FileModel = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("path")=>"String", Symbol("st_mtime")=>"Float64", Symbol("_key")=>"String", Symbol("_id")=>"String", Symbol("_rev")=>"String", )
OpenAPI.property_type(::Type{ FileModel }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FileModel[name]))}

function check_required(o::FileModel)
    o.path === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ FileModel }, name::Symbol, val)
end
