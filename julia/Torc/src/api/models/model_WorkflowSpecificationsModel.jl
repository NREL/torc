# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""workflow_specifications_model

    WorkflowSpecificationsModel(;
        name=nothing,
        key=nothing,
        user=nothing,
        description=nothing,
        jobs=nothing,
        files=nothing,
        user_data=nothing,
        resource_requirements=nothing,
        schedulers=nothing,
        config=nothing,
    )

    - name::String
    - key::String
    - user::String
    - description::String
    - jobs::Vector{WorkflowJobSpecificationsModel}
    - files::Vector{WorkflowFilesModel}
    - user_data::Vector{WorkflowUserDataModel}
    - resource_requirements::Vector{WorkflowResourceRequirementsModel}
    - schedulers::WorkflowSpecificationsSchedulers
    - config::WorkflowConfigModel
"""
Base.@kwdef mutable struct WorkflowSpecificationsModel <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    key::Union{Nothing, String} = nothing
    user::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    jobs::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{WorkflowJobSpecificationsModel} }
    files::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{WorkflowFilesModel} }
    user_data::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{WorkflowUserDataModel} }
    resource_requirements::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{WorkflowResourceRequirementsModel} }
    schedulers = nothing # spec type: Union{ Nothing, WorkflowSpecificationsSchedulers }
    config = nothing # spec type: Union{ Nothing, WorkflowConfigModel }

    function WorkflowSpecificationsModel(name, key, user, description, jobs, files, user_data, resource_requirements, schedulers, config, )
        OpenAPI.validate_property(WorkflowSpecificationsModel, Symbol("name"), name)
        OpenAPI.validate_property(WorkflowSpecificationsModel, Symbol("key"), key)
        OpenAPI.validate_property(WorkflowSpecificationsModel, Symbol("user"), user)
        OpenAPI.validate_property(WorkflowSpecificationsModel, Symbol("description"), description)
        OpenAPI.validate_property(WorkflowSpecificationsModel, Symbol("jobs"), jobs)
        OpenAPI.validate_property(WorkflowSpecificationsModel, Symbol("files"), files)
        OpenAPI.validate_property(WorkflowSpecificationsModel, Symbol("user_data"), user_data)
        OpenAPI.validate_property(WorkflowSpecificationsModel, Symbol("resource_requirements"), resource_requirements)
        OpenAPI.validate_property(WorkflowSpecificationsModel, Symbol("schedulers"), schedulers)
        OpenAPI.validate_property(WorkflowSpecificationsModel, Symbol("config"), config)
        return new(name, key, user, description, jobs, files, user_data, resource_requirements, schedulers, config, )
    end
end # type WorkflowSpecificationsModel

const _property_types_WorkflowSpecificationsModel = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("key")=>"String", Symbol("user")=>"String", Symbol("description")=>"String", Symbol("jobs")=>"Vector{WorkflowJobSpecificationsModel}", Symbol("files")=>"Vector{WorkflowFilesModel}", Symbol("user_data")=>"Vector{WorkflowUserDataModel}", Symbol("resource_requirements")=>"Vector{WorkflowResourceRequirementsModel}", Symbol("schedulers")=>"WorkflowSpecificationsSchedulers", Symbol("config")=>"WorkflowConfigModel", )
OpenAPI.property_type(::Type{ WorkflowSpecificationsModel }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WorkflowSpecificationsModel[name]))}

function check_required(o::WorkflowSpecificationsModel)
    true
end

function OpenAPI.validate_property(::Type{ WorkflowSpecificationsModel }, name::Symbol, val)
end
