# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""workflow_model

    WorkflowModel(;
        name=nothing,
        user=nothing,
        description=nothing,
        timestamp=nothing,
        is_archived=false,
        _key=nothing,
        _id=nothing,
        _rev=nothing,
    )

    - name::String : Name of the workflow
    - user::String : User that created the workflow
    - description::String : Description of the workflow
    - timestamp::String : Timestamp of workflow creation
    - is_archived::Bool : Flag indicating whether the workflow has been archived
    - _key::String
    - _id::String
    - _rev::String
"""
Base.@kwdef mutable struct WorkflowModel <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    user::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    timestamp::Union{Nothing, String} = nothing
    is_archived::Union{Nothing, Bool} = false
    _key::Union{Nothing, String} = nothing
    _id::Union{Nothing, String} = nothing
    _rev::Union{Nothing, String} = nothing

    function WorkflowModel(name, user, description, timestamp, is_archived, _key, _id, _rev, )
        o = new(name, user, description, timestamp, is_archived, _key, _id, _rev, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type WorkflowModel

const _property_types_WorkflowModel = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("user")=>"String", Symbol("description")=>"String", Symbol("timestamp")=>"String", Symbol("is_archived")=>"Bool", Symbol("_key")=>"String", Symbol("_id")=>"String", Symbol("_rev")=>"String", )
OpenAPI.property_type(::Type{ WorkflowModel }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WorkflowModel[name]))}

function OpenAPI.check_required(o::WorkflowModel)
    o.user === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::WorkflowModel)
    OpenAPI.validate_property(WorkflowModel, Symbol("name"), o.name)
    OpenAPI.validate_property(WorkflowModel, Symbol("user"), o.user)
    OpenAPI.validate_property(WorkflowModel, Symbol("description"), o.description)
    OpenAPI.validate_property(WorkflowModel, Symbol("timestamp"), o.timestamp)
    OpenAPI.validate_property(WorkflowModel, Symbol("is_archived"), o.is_archived)
    OpenAPI.validate_property(WorkflowModel, Symbol("_key"), o._key)
    OpenAPI.validate_property(WorkflowModel, Symbol("_id"), o._id)
    OpenAPI.validate_property(WorkflowModel, Symbol("_rev"), o._rev)
end

function OpenAPI.validate_property(::Type{ WorkflowModel }, name::Symbol, val)








end
