# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""post_workflows_key_prepare_jobs_for_submission_response

    PostWorkflowsKeyPrepareJobsForSubmissionResponse(;
        jobs=nothing,
        reason=nothing,
    )

    - jobs::Vector{JobsModel}
    - reason::String
"""
Base.@kwdef mutable struct PostWorkflowsKeyPrepareJobsForSubmissionResponse <: OpenAPI.APIModel
    jobs::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{JobsModel} }
    reason::Union{Nothing, String} = nothing

    function PostWorkflowsKeyPrepareJobsForSubmissionResponse(jobs, reason, )
        OpenAPI.validate_property(PostWorkflowsKeyPrepareJobsForSubmissionResponse, Symbol("jobs"), jobs)
        OpenAPI.validate_property(PostWorkflowsKeyPrepareJobsForSubmissionResponse, Symbol("reason"), reason)
        return new(jobs, reason, )
    end
end # type PostWorkflowsKeyPrepareJobsForSubmissionResponse

const _property_types_PostWorkflowsKeyPrepareJobsForSubmissionResponse = Dict{Symbol,String}(Symbol("jobs")=>"Vector{JobsModel}", Symbol("reason")=>"String", )
OpenAPI.property_type(::Type{ PostWorkflowsKeyPrepareJobsForSubmissionResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PostWorkflowsKeyPrepareJobsForSubmissionResponse[name]))}

function check_required(o::PostWorkflowsKeyPrepareJobsForSubmissionResponse)
    true
end

function OpenAPI.validate_property(::Type{ PostWorkflowsKeyPrepareJobsForSubmissionResponse }, name::Symbol, val)
end
