# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""resource_requirements_model

    ResourceRequirementsModel(;
        name=nothing,
        num_cpus=nothing,
        num_gpus=nothing,
        num_nodes=nothing,
        memory="1m",
        runtime="P0DT1M",
        _key=nothing,
        _id=nothing,
        _rev=nothing,
    )

    - name::String : Name of the resource requirements
    - num_cpus::Int64 : Number of CPUs required by a job
    - num_gpus::Int64 : Number of GPUs required by a job
    - num_nodes::Int64 : Number of nodes required by a job
    - memory::String : Amount of memory required by a job, e.g., 20g
    - runtime::String : Maximum runtime for a job
    - _key::String
    - _id::String
    - _rev::String
"""
Base.@kwdef mutable struct ResourceRequirementsModel <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    num_cpus::Union{Nothing, Int64} = nothing
    num_gpus::Union{Nothing, Int64} = nothing
    num_nodes::Union{Nothing, Int64} = nothing
    memory::Union{Nothing, String} = "1m"
    runtime::Union{Nothing, String} = "P0DT1M"
    _key::Union{Nothing, String} = nothing
    _id::Union{Nothing, String} = nothing
    _rev::Union{Nothing, String} = nothing

    function ResourceRequirementsModel(name, num_cpus, num_gpus, num_nodes, memory, runtime, _key, _id, _rev, )
        o = new(name, num_cpus, num_gpus, num_nodes, memory, runtime, _key, _id, _rev, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ResourceRequirementsModel

const _property_types_ResourceRequirementsModel = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("num_cpus")=>"Int64", Symbol("num_gpus")=>"Int64", Symbol("num_nodes")=>"Int64", Symbol("memory")=>"String", Symbol("runtime")=>"String", Symbol("_key")=>"String", Symbol("_id")=>"String", Symbol("_rev")=>"String", )
OpenAPI.property_type(::Type{ ResourceRequirementsModel }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ResourceRequirementsModel[name]))}

function OpenAPI.check_required(o::ResourceRequirementsModel)
    true
end

function OpenAPI.validate_properties(o::ResourceRequirementsModel)
    OpenAPI.validate_property(ResourceRequirementsModel, Symbol("name"), o.name)
    OpenAPI.validate_property(ResourceRequirementsModel, Symbol("num_cpus"), o.num_cpus)
    OpenAPI.validate_property(ResourceRequirementsModel, Symbol("num_gpus"), o.num_gpus)
    OpenAPI.validate_property(ResourceRequirementsModel, Symbol("num_nodes"), o.num_nodes)
    OpenAPI.validate_property(ResourceRequirementsModel, Symbol("memory"), o.memory)
    OpenAPI.validate_property(ResourceRequirementsModel, Symbol("runtime"), o.runtime)
    OpenAPI.validate_property(ResourceRequirementsModel, Symbol("_key"), o._key)
    OpenAPI.validate_property(ResourceRequirementsModel, Symbol("_id"), o._id)
    OpenAPI.validate_property(ResourceRequirementsModel, Symbol("_rev"), o._rev)
end

function OpenAPI.validate_property(::Type{ ResourceRequirementsModel }, name::Symbol, val)









end
