# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""local_scheduler_model

    LocalSchedulerModel(;
        name="default",
        memory=nothing,
        num_cpus=nothing,
        _key=nothing,
        _id=nothing,
        _rev=nothing,
    )

    - name::String
    - memory::String
    - num_cpus::Int64
    - _key::String
    - _id::String
    - _rev::String
"""
Base.@kwdef mutable struct LocalSchedulerModel <: OpenAPI.APIModel
    name::Union{Nothing, String} = "default"
    memory::Union{Nothing, String} = nothing
    num_cpus::Union{Nothing, Int64} = nothing
    _key::Union{Nothing, String} = nothing
    _id::Union{Nothing, String} = nothing
    _rev::Union{Nothing, String} = nothing

    function LocalSchedulerModel(name, memory, num_cpus, _key, _id, _rev, )
        OpenAPI.validate_property(LocalSchedulerModel, Symbol("name"), name)
        OpenAPI.validate_property(LocalSchedulerModel, Symbol("memory"), memory)
        OpenAPI.validate_property(LocalSchedulerModel, Symbol("num_cpus"), num_cpus)
        OpenAPI.validate_property(LocalSchedulerModel, Symbol("_key"), _key)
        OpenAPI.validate_property(LocalSchedulerModel, Symbol("_id"), _id)
        OpenAPI.validate_property(LocalSchedulerModel, Symbol("_rev"), _rev)
        return new(name, memory, num_cpus, _key, _id, _rev, )
    end
end # type LocalSchedulerModel

const _property_types_LocalSchedulerModel = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("memory")=>"String", Symbol("num_cpus")=>"Int64", Symbol("_key")=>"String", Symbol("_id")=>"String", Symbol("_rev")=>"String", )
OpenAPI.property_type(::Type{ LocalSchedulerModel }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_LocalSchedulerModel[name]))}

function check_required(o::LocalSchedulerModel)
    true
end

function OpenAPI.validate_property(::Type{ LocalSchedulerModel }, name::Symbol, val)
end
