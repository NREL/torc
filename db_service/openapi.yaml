openapi: 3.0.1
info:
  description: ''
  license:
    name: BSD 3-Clause
  title: torc
  version: v0.1.13
servers:
- url: /_db/test-workflows/torc-service
paths:
  /workflows/{workflow}/aws_schedulers:
    get:
      tags: []
      summary: Retrieve all AWS compute node configuration documents
      description: Retrieve all documents from the "aws_schedulers" collection for
        one workflow.
      operationId: get_workflows_workflow_aws_schedulers
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_aws_schedulers_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a AWS compute node configuration.
      description: Store a AWS compute node configuration in the "aws_schedulers"
        collection.
      operationId: post_workflows_workflow_aws_schedulers
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: AWS compute node configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_aws_schedulers_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of AWS compute node configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_aws_schedulers_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type AWS compute node configuration for a workflow
      description: Delete all documents from the "aws_schedulers" collection for a
        workflow.
      operationId: delete_workflows_workflow_aws_schedulers
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/aws_schedulers/{key}:
    get:
      tags: []
      summary: Retrieve the AWS compute node configuration for a key.
      description: Retrieve the document from the "aws_schedulers" collection by key.
      operationId: get_workflows_workflow_aws_schedulers_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the aws_schedulers document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_aws_schedulers_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update AWS compute node configuration
      description: Update a document in the "aws_schedulers" collection.
      operationId: put_workflows_workflow_aws_schedulers_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the AWS compute node configuration.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: AWS compute node configuration to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_aws_schedulers_model'
        required: true
      responses:
        '200':
          description: AWS compute node configuration updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_aws_schedulers_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type AWS compute node configuration
      description: Deletes a document from the "aws_schedulers" collection by key.
      operationId: delete_workflows_workflow_aws_schedulers_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the AWS compute node configuration document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: AWS compute node configuration stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_aws_schedulers_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/compute_nodes:
    get:
      tags: []
      summary: Retrieve all compute node documents
      description: Retrieve all documents from the "compute_nodes" collection for
        one workflow.
      operationId: get_workflows_workflow_compute_nodes
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: hostname
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: is_active
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_compute_nodes_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a compute node.
      description: Store a compute node in the "compute_nodes" collection.
      operationId: post_workflows_workflow_compute_nodes
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: compute node.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_compute_nodes_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of compute node.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_compute_nodes_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type compute node for a workflow
      description: Delete all documents from the "compute_nodes" collection for a
        workflow.
      operationId: delete_workflows_workflow_compute_nodes
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/compute_nodes/{key}:
    get:
      tags: []
      summary: Retrieve the compute node for a key.
      description: Retrieve the document from the "compute_nodes" collection by key.
      operationId: get_workflows_workflow_compute_nodes_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the compute_nodes document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_compute_nodes_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update compute node
      description: Update a document in the "compute_nodes" collection.
      operationId: put_workflows_workflow_compute_nodes_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the compute node.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: compute node to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_compute_nodes_model'
        required: true
      responses:
        '200':
          description: compute node updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_compute_nodes_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type compute node
      description: Deletes a document from the "compute_nodes" collection by key.
      operationId: delete_workflows_workflow_compute_nodes_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the compute node document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: compute node stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_compute_nodes_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/compute_node_stats:
    get:
      tags: []
      summary: Retrieve all compute node statistics documents
      description: Retrieve all documents from the "compute_node_stats" collection
        for one workflow.
      operationId: get_workflows_workflow_compute_node_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: hostname
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_compute_node_stats_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a compute node statistics.
      description: Store a compute node statistics in the "compute_node_stats" collection.
      operationId: post_workflows_workflow_compute_node_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: compute node statistics.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_compute_node_stats_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of compute node statistics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_compute_node_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type compute node statistics for a workflow
      description: Delete all documents from the "compute_node_stats" collection for
        a workflow.
      operationId: delete_workflows_workflow_compute_node_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/compute_node_stats/{key}:
    get:
      tags: []
      summary: Retrieve the compute node statistics for a key.
      description: Retrieve the document from the "compute_node_stats" collection
        by key.
      operationId: get_workflows_workflow_compute_node_stats_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the compute_node_stats document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_compute_node_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update compute node statistics
      description: Update a document in the "compute_node_stats" collection.
      operationId: put_workflows_workflow_compute_node_stats_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the compute node statistics.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: compute node statistics to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_compute_node_stats_model'
        required: true
      responses:
        '200':
          description: compute node statistics updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_compute_node_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type compute node statistics
      description: Deletes a document from the "compute_node_stats" collection by
        key.
      operationId: delete_workflows_workflow_compute_node_stats_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the compute node statistics document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: compute node statistics stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_compute_node_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/events:
    get:
      tags: []
      summary: Retrieve all event documents
      description: Retrieve all documents from the "events" collection for one workflow.
      operationId: get_workflows_workflow_events
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_events_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a event.
      description: Store a event in the "events" collection.
      operationId: post_workflows_workflow_events
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: event.
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: Response from posting an instance of event.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type event for a workflow
      description: Delete all documents from the "events" collection for a workflow.
      operationId: delete_workflows_workflow_events
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/events/{key}:
    get:
      tags: []
      summary: Retrieve the event for a key.
      description: Retrieve the document from the "events" collection by key.
      operationId: get_workflows_workflow_events_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the events document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update event
      description: Update a document in the "events" collection.
      operationId: put_workflows_workflow_events_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the event.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: event to update in the collection.
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: event updated in the collection.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type event
      description: Deletes a document from the "events" collection by key.
      operationId: delete_workflows_workflow_events_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the event document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: event stored in the collection.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/files:
    get:
      tags: []
      summary: Retrieve all file documents
      description: Retrieve all documents from the "files" collection for one workflow.
      operationId: get_workflows_workflow_files
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: path
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_files_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a file.
      description: Store a file in the "files" collection.
      operationId: post_workflows_workflow_files
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: file.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_files_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of file.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_files_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type file for a workflow
      description: Delete all documents from the "files" collection for a workflow.
      operationId: delete_workflows_workflow_files
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/files/{key}:
    get:
      tags: []
      summary: Retrieve the file for a key.
      description: Retrieve the document from the "files" collection by key.
      operationId: get_workflows_workflow_files_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the files document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_files_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update file
      description: Update a document in the "files" collection.
      operationId: put_workflows_workflow_files_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the file.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: file to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_files_model'
        required: true
      responses:
        '200':
          description: file updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_files_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type file
      description: Deletes a document from the "files" collection by key.
      operationId: delete_workflows_workflow_files_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the file document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: file stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_files_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/jobs:
    get:
      tags: []
      summary: Retrieve all job documents
      description: Retrieve all documents from the "jobs" collection for one workflow.
      operationId: get_workflows_workflow_jobs
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: command
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cancel_on_blocking_job_failure
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: supports_termination
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_jobs_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a job.
      description: Store a job in the "jobs" collection.
      operationId: post_workflows_workflow_jobs
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: job.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_jobs_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_jobs_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type job for a workflow
      description: Delete all documents from the "jobs" collection for a workflow.
      operationId: delete_workflows_workflow_jobs
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/jobs/{key}:
    get:
      tags: []
      summary: Retrieve the job for a key.
      description: Retrieve the document from the "jobs" collection by key.
      operationId: get_workflows_workflow_jobs_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the jobs document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_jobs_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update job
      description: Update a document in the "jobs" collection.
      operationId: put_workflows_workflow_jobs_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the job.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: job to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_jobs_model'
        required: true
      responses:
        '200':
          description: job updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_jobs_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type job
      description: Deletes a document from the "jobs" collection by key.
      operationId: delete_workflows_workflow_jobs_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the job document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: job stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_jobs_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/job_process_stats:
    get:
      tags: []
      summary: Retrieve all job process statistics documents
      description: Retrieve all documents from the "job_process_stats" collection
        for one workflow.
      operationId: get_workflows_workflow_job_process_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: job_key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: run_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_job_process_stats_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a job process statistics.
      description: Store a job process statistics in the "job_process_stats" collection.
      operationId: post_workflows_workflow_job_process_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: job process statistics.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_job_process_stats_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of job process statistics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_job_process_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type job process statistics for a workflow
      description: Delete all documents from the "job_process_stats" collection for
        a workflow.
      operationId: delete_workflows_workflow_job_process_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/job_process_stats/{key}:
    get:
      tags: []
      summary: Retrieve the job process statistics for a key.
      description: Retrieve the document from the "job_process_stats" collection by
        key.
      operationId: get_workflows_workflow_job_process_stats_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the job_process_stats document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_job_process_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update job process statistics
      description: Update a document in the "job_process_stats" collection.
      operationId: put_workflows_workflow_job_process_stats_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the job process statistics.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: job process statistics to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_job_process_stats_model'
        required: true
      responses:
        '200':
          description: job process statistics updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_job_process_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type job process statistics
      description: Deletes a document from the "job_process_stats" collection by key.
      operationId: delete_workflows_workflow_job_process_stats_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the job process statistics document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: job process statistics stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_job_process_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/local_schedulers:
    get:
      tags: []
      summary: Retrieve all local compute node configuration documents
      description: Retrieve all documents from the "local_schedulers" collection for
        one workflow.
      operationId: get_workflows_workflow_local_schedulers
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: memory
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: num_cpus
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_local_schedulers_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a local compute node configuration.
      description: Store a local compute node configuration in the "local_schedulers"
        collection.
      operationId: post_workflows_workflow_local_schedulers
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: local compute node configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_local_schedulers_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of local compute node configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_local_schedulers_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type local compute node configuration for a
        workflow
      description: Delete all documents from the "local_schedulers" collection for
        a workflow.
      operationId: delete_workflows_workflow_local_schedulers
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/local_schedulers/{key}:
    get:
      tags: []
      summary: Retrieve the local compute node configuration for a key.
      description: Retrieve the document from the "local_schedulers" collection by
        key.
      operationId: get_workflows_workflow_local_schedulers_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the local_schedulers document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_local_schedulers_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update local compute node configuration
      description: Update a document in the "local_schedulers" collection.
      operationId: put_workflows_workflow_local_schedulers_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the local compute node configuration.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: local compute node configuration to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_local_schedulers_model'
        required: true
      responses:
        '200':
          description: local compute node configuration updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_local_schedulers_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type local compute node configuration
      description: Deletes a document from the "local_schedulers" collection by key.
      operationId: delete_workflows_workflow_local_schedulers_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the local compute node configuration document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: local compute node configuration stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_local_schedulers_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/resource_requirements:
    get:
      tags: []
      summary: Retrieve all resource requirements documents
      description: Retrieve all documents from the "resource_requirements" collection
        for one workflow.
      operationId: get_workflows_workflow_resource_requirements
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: memory
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: num_cpus
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: num_gpus
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: num_nodes
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: runtime
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_resource_requirements_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a resource requirements.
      description: Store a resource requirements in the "resource_requirements" collection.
      operationId: post_workflows_workflow_resource_requirements
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: resource requirements.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_resource_requirements_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of resource requirements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_resource_requirements_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type resource requirements for a workflow
      description: Delete all documents from the "resource_requirements" collection
        for a workflow.
      operationId: delete_workflows_workflow_resource_requirements
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/resource_requirements/{key}:
    get:
      tags: []
      summary: Retrieve the resource requirements for a key.
      description: Retrieve the document from the "resource_requirements" collection
        by key.
      operationId: get_workflows_workflow_resource_requirements_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the resource_requirements document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_resource_requirements_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update resource requirements
      description: Update a document in the "resource_requirements" collection.
      operationId: put_workflows_workflow_resource_requirements_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the resource requirements.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: resource requirements to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_resource_requirements_model'
        required: true
      responses:
        '200':
          description: resource requirements updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_resource_requirements_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type resource requirements
      description: Deletes a document from the "resource_requirements" collection
        by key.
      operationId: delete_workflows_workflow_resource_requirements_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the resource requirements document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: resource requirements stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_resource_requirements_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/results:
    get:
      tags: []
      summary: Retrieve all result documents
      description: Retrieve all documents from the "results" collection for one workflow.
      operationId: get_workflows_workflow_results
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: job_key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: run_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: return_code
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_results_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a result.
      description: Store a result in the "results" collection.
      operationId: post_workflows_workflow_results
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: result.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_results_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_results_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type result for a workflow
      description: Delete all documents from the "results" collection for a workflow.
      operationId: delete_workflows_workflow_results
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/results/{key}:
    get:
      tags: []
      summary: Retrieve the result for a key.
      description: Retrieve the document from the "results" collection by key.
      operationId: get_workflows_workflow_results_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the results document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_results_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update result
      description: Update a document in the "results" collection.
      operationId: put_workflows_workflow_results_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the result.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: result to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_results_model'
        required: true
      responses:
        '200':
          description: result updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_results_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type result
      description: Deletes a document from the "results" collection by key.
      operationId: delete_workflows_workflow_results_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the result document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: result stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_results_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/scheduled_compute_nodes:
    get:
      tags: []
      summary: Retrieve all scheduled compute node documents
      description: Retrieve all documents from the "scheduled_compute_nodes" collection
        for one workflow.
      operationId: get_workflows_workflow_scheduled_compute_nodes
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: scheduler_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: scheduler_config_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_scheduled_compute_nodes_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a scheduled compute node.
      description: Store a scheduled compute node in the "scheduled_compute_nodes"
        collection.
      operationId: post_workflows_workflow_scheduled_compute_nodes
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: scheduled compute node.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_scheduled_compute_nodes_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of scheduled compute node.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_scheduled_compute_nodes_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type scheduled compute node for a workflow
      description: Delete all documents from the "scheduled_compute_nodes" collection
        for a workflow.
      operationId: delete_workflows_workflow_scheduled_compute_nodes
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/scheduled_compute_nodes/{key}:
    get:
      tags: []
      summary: Retrieve the scheduled compute node for a key.
      description: Retrieve the document from the "scheduled_compute_nodes" collection
        by key.
      operationId: get_workflows_workflow_scheduled_compute_nodes_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the scheduled_compute_nodes document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_scheduled_compute_nodes_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update scheduled compute node
      description: Update a document in the "scheduled_compute_nodes" collection.
      operationId: put_workflows_workflow_scheduled_compute_nodes_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the scheduled compute node.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: scheduled compute node to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_scheduled_compute_nodes_model'
        required: true
      responses:
        '200':
          description: scheduled compute node updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_scheduled_compute_nodes_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type scheduled compute node
      description: Deletes a document from the "scheduled_compute_nodes" collection
        by key.
      operationId: delete_workflows_workflow_scheduled_compute_nodes_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the scheduled compute node document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: scheduled compute node stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_scheduled_compute_nodes_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/slurm_schedulers:
    get:
      tags: []
      summary: Retrieve all Slurm compute node configuration documents
      description: Retrieve all documents from the "slurm_schedulers" collection for
        one workflow.
      operationId: get_workflows_workflow_slurm_schedulers
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: account
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: gres
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: mem
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nodes
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: partition
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: qos
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tmp
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: walltime
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_slurm_schedulers_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a Slurm compute node configuration.
      description: Store a Slurm compute node configuration in the "slurm_schedulers"
        collection.
      operationId: post_workflows_workflow_slurm_schedulers
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Slurm compute node configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_slurm_schedulers_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of Slurm compute node configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_slurm_schedulers_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type Slurm compute node configuration for a
        workflow
      description: Delete all documents from the "slurm_schedulers" collection for
        a workflow.
      operationId: delete_workflows_workflow_slurm_schedulers
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/slurm_schedulers/{key}:
    get:
      tags: []
      summary: Retrieve the Slurm compute node configuration for a key.
      description: Retrieve the document from the "slurm_schedulers" collection by
        key.
      operationId: get_workflows_workflow_slurm_schedulers_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the slurm_schedulers document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_slurm_schedulers_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update Slurm compute node configuration
      description: Update a document in the "slurm_schedulers" collection.
      operationId: put_workflows_workflow_slurm_schedulers_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the Slurm compute node configuration.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Slurm compute node configuration to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_slurm_schedulers_model'
        required: true
      responses:
        '200':
          description: Slurm compute node configuration updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_slurm_schedulers_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type Slurm compute node configuration
      description: Deletes a document from the "slurm_schedulers" collection by key.
      operationId: delete_workflows_workflow_slurm_schedulers_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the Slurm compute node configuration document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: Slurm compute node configuration stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_slurm_schedulers_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/user_data:
    get:
      tags: []
      summary: Retrieve all user data documents
      description: Retrieve all documents from the "user_data" collection for one
        workflow.
      operationId: get_workflows_workflow_user_data
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: is_ephemeral
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_user_data_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a user data.
      description: Store a user data in the "user_data" collection.
      operationId: post_workflows_workflow_user_data
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: user data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_user_data_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_user_data_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type user data for a workflow
      description: Delete all documents from the "user_data" collection for a workflow.
      operationId: delete_workflows_workflow_user_data
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/user_data/{key}:
    get:
      tags: []
      summary: Retrieve the user data for a key.
      description: Retrieve the document from the "user_data" collection by key.
      operationId: get_workflows_workflow_user_data_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the user_data document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_user_data_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update user data
      description: Update a document in the "user_data" collection.
      operationId: put_workflows_workflow_user_data_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the user data.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: user data to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_user_data_model'
        required: true
      responses:
        '200':
          description: user data updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_user_data_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type user data
      description: Deletes a document from the "user_data" collection by key.
      operationId: delete_workflows_workflow_user_data_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the user data document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: user data stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_user_data_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/edges/{name}:
    get:
      tags: []
      summary: Retrieve all edges from the designated collection.
      description: Retrieve all edges from the designated collection.
      operationId: get_workflows_workflow_edges_name
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: Edge collection name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_edges_name_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store an edge between two vertexes.
      description: Store an edge between two vertexes in the designated collection.
      operationId: post_workflows_workflow_edges_name
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: Edge name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Relationship between two vertexes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/edges_name_model'
        required: true
      responses:
        '200':
          description: Edge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edges_name_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all edges from the designated collection
      description: Deletes all edges from the designated collection.
      operationId: delete_workflows_workflow_edges_name
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: Edge collection name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/edges/{name}/{key}:
    get:
      tags: []
      summary: Retrieve an edge
      description: Retrieves an edge from the designated collection by key.
      operationId: get_workflows_workflow_edges_name_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: Edge collection name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Edge key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Edge stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edges_name_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    delete:
      tags: []
      summary: Delete an edge
      description: Deletes an edge from the designated collection by key.
      operationId: delete_workflows_workflow_edges_name_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: Edge name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Edge key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: Edge stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edges_name_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/files/produced_by_job/{key}:
    get:
      tags: []
      summary: Retrieve files produced by a job
      description: Retrieves files from the "files" collection produced by a job.
      operationId: get_workflows_workflow_files_produced_by_job_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_files_produced_by_job_key_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflows/{workflow}/job_specifications:
    get:
      tags: []
      summary: Retrieve all job definitions
      description: Retrieves all job definitions. Limit output with skip and limit.
      operationId: get_workflows_workflow_job_specifications
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_job_specifications_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a job and create edges.
      description: Store a job in the "jobs" collection and create edges.
      operationId: post_workflows_workflow_job_specifications
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: job definition to store in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_job_specifications_model'
        required: true
      responses:
        '200':
          description: job stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_job_specifications_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/job_specifications/{key}:
    get:
      tags: []
      summary: Retrieve a job
      description: Retrieves a job from the "jobs" collection by key.
      operationId: get_workflows_workflow_job_specifications_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Job stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_job_specifications_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflows/{workflow}/job_keys:
    get:
      tags: []
      summary: Retrieve all job keys for a workflow.
      description: Retrieves all job keys from the "jobs" collection for a workflow.
      operationId: get_workflows_workflow_job_keys
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflows/{workflow}/jobs/find_by_status/{status}:
    get:
      tags: []
      summary: Retrieve all jobs with a specific status
      description: Retrieves all jobs from the "jobs" collection with a specific status.
      operationId: get_workflows_workflow_jobs_find_by_status_status
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: status
        in: path
        description: Job status.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_jobs_find_by_status_status_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflows/{workflow}/jobs/find_by_needs_file/{key}:
    get:
      tags: []
      summary: Retrieve all jobs that need a file
      description: Retrieves all jobs connected to a file by the needs edge.
      operationId: get_workflows_workflow_jobs_find_by_needs_file_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: File key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_jobs_find_by_needs_file_key_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflows/{workflow}/jobs/{key}/resource_requirements:
    get:
      tags: []
      summary: Retrieve the resource requirements for a job.
      description: Retrieve the resource requirements for a job by its key.
      operationId: get_workflows_workflow_jobs_key_resource_requirements
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Resource requirements for the job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_resource_requirements_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflows/{workflow}/jobs/{key}/resource_requirements/{rr_key}:
    put:
      tags: []
      summary: Set the resource requirements for a job.
      description: Set the resource requirements for a job, replacing any current
        value.
      operationId: put_workflows_workflow_jobs_key_resource_requirements_rr_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: rr_key
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: Requires edge that connects the job and resource requirements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edges_name_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/jobs/{key}/process_stats:
    get:
      tags: []
      summary: Retrieve the job process stats for a job.
      description: Retrieve the job process stats for a job by its key.
      operationId: get_workflows_workflow_jobs_key_process_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Process stats for the job.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/workflow_job_process_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflows/{workflow}/jobs/{key}/complete_job/{status}/{rev}/{run_id}:
    post:
      tags: []
      summary: Complete a job and add a result.
      description: Complete a job, connect it to a result, and manage side effects.
      operationId: post_workflows_workflow_jobs_key_complete_job_status_rev_run_id
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: status
        in: path
        description: New job status.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: rev
        in: path
        description: Current job revision.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: run_id
        in: path
        description: Current job run ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Result of the job.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_results_model'
        required: true
      responses:
        '200':
          description: job completed in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_jobs_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/jobs/{key}/manage_status_change/{status}/{rev}/{run_id}:
    put:
      tags: []
      summary: Change the status of a job and manage side effects.
      description: Change the status of a job and manage side effects.
      operationId: put_workflows_workflow_jobs_key_manage_status_change_status_rev_run_id
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: status
        in: path
        description: New job status
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: rev
        in: path
        description: Current job revision
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: run_id
        in: path
        description: Current job run ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: Updated job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_jobs_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/jobs/{key}/user_data:
    post:
      tags: []
      summary: Store user data for a job.
      description: Store user data for a job and connect the two vertexes.
      operationId: post_workflows_workflow_jobs_key_user_data
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: User data for the job.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_user_data_model'
        required: true
      responses:
        '200':
          description: Database information for the user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_user_data_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/jobs/{key}/user_data_stores:
    get:
      tags: []
      summary: Retrieve all user data for a job.
      description: Retrieve all user data for a job.
      operationId: get_workflows_workflow_jobs_key_user_data_stores
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: All user data stored for the job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_jobs_key_user_data_stores_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflows/{workflow}/jobs/{key}/user_data_consumes:
    get:
      tags: []
      summary: Retrieve all user data consumed by a job.
      description: Retrieve all user data consumed by a job.
      operationId: get_workflows_workflow_jobs_key_user_data_consumes
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: All user data consumed by the job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_workflow_jobs_key_user_data_consumes_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflows/{workflow}/results/find_by_job/{key}:
    get:
      tags: []
      summary: Retrieve the latest result for a job
      description: Retrieve the latest result for a job. Throws an error if no result
        is stored.
      operationId: get_workflows_workflow_results_find_by_job_key
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_results_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflow_specifications:
    post:
      tags: []
      summary: Store a workflow.
      description: Store a workflow.
      operationId: post_workflow_specifications
      requestBody:
        description: New workflow
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_specifications_model'
        required: true
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflows_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflow_specifications/{key}:
    get:
      tags: []
      summary: Retrieve the current workflow
      description: Retrieves the current workflow in JSON format.
      operationId: get_workflow_specifications_key
      parameters:
      - name: key
        in: path
        description: key of the workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Stored workflow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_specifications_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflow_specifications/example:
    get:
      tags: []
      summary: Retrieve an example workflow specification
      description: Retrieves an example workflow specification in JSON format.
      operationId: get_workflow_specifications_example
      responses:
        '200':
          description: Example workflow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_specifications_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflow_specifications/template:
    get:
      tags: []
      summary: Retrieve the workflow specification template
      description: Retrieve the workflow specification template in JSON format.
      operationId: get_workflow_specifications_template
      responses:
        '200':
          description: Workflow template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_specifications_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /ping:
    get:
      tags: []
      summary: Check if the service is running.
      description: Check if the service is running.
      operationId: get_ping
      responses:
        '200':
          description: Message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflows:
    get:
      tags: []
      summary: Retrieve all workflows
      description: Retrieves all documents from the "workflows" collection.
      operationId: get_workflows
      parameters:
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: user
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: description
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a workflow.
      description: Store a workflow in the "workflows" collection.
      operationId: post_workflows
      requestBody:
        description: Collection of jobs and dependent resources.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflows_model'
        required: true
      responses:
        '200':
          description: Collection of jobs and dependent resources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflows_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}:
    get:
      tags: []
      summary: Retrieve the workflow for an key.
      description: Retrieve the document for a key from the "workflows" collection.
      operationId: get_workflows_key
      parameters:
      - name: key
        in: path
        description: key of the workflows document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflows_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update workflow
      description: Update a document in the "workflows" collection.
      operationId: put_workflows_key
      parameters:
      - name: key
        in: path
        description: Key of the workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: workflow to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflows_model'
        required: true
      responses:
        '200':
          description: workflow updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflows_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a workflow
      description: Deletes a document from the "workflows" collection by key.
      operationId: delete_workflows_key
      parameters:
      - name: key
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: workflow stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflows_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/is_complete:
    get:
      tags: []
      summary: Report whether the workflow is complete
      description: Reports true if all jobs in the workflow are complete.
      operationId: get_workflows_key_is_complete
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_key_is_complete_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflows/{key}/ready_job_requirements:
    get:
      tags: []
      summary: Return the resource requirements for ready jobs.
      description: Return the resource requirements for jobs with a status of ready.
      operationId: get_workflows_key_ready_job_requirements
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scheduler_config_id
        in: query
        description: Limit output to jobs assigned this scheduler.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 'null'
          - ''
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_key_ready_job_requirements_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflows/{key}/initialize_jobs:
    post:
      tags: []
      summary: Initialize job relationships.
      description: Initialize job relationships based on file and user_data relationships.
      operationId: post_workflows_key_initialize_jobs
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: only_uninitialized
        in: query
        description: Only initialize jobs with a status of uninitialized.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/process_changed_job_inputs:
    post:
      tags: []
      summary: Check for changed job inputs and update status accordingly.
      description: Check for changed job inputs and update status accordingly.
      operationId: post_workflows_key_process_changed_job_inputs
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_workflows_key_process_changed_job_inputs_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/missing_user_data:
    get:
      tags: []
      summary: List missing user data that should exist.
      description: List missing user data that should exist.
      operationId: get_workflows_key_missing_user_data
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_key_missing_user_data_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflows/{key}/required_existing_files:
    get:
      tags: []
      summary: List files that must exist.
      description: List files that must exist.
      operationId: get_workflows_key_required_existing_files
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_key_required_existing_files_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflows/{key}/prepare_jobs_for_submission:
    post:
      tags: []
      summary: Return ready jobs, accounting for resource requirements.
      description: Return jobs that are ready for submission and meet worker resource
        Sets status to submitted_pending.
      operationId: post_workflows_key_prepare_jobs_for_submission
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      requestBody:
        description: Available worker resources.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compute_nodes_resources'
        required: true
      responses:
        '200':
          description: Jobs that are ready for submission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_workflows_key_prepare_jobs_for_submission_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/prepare_next_jobs_for_submission:
    post:
      tags: []
      summary: Return user-requested number of ready jobs.
      description: Return user-requested number of jobs that are ready for submission.
        Sets status to submitted_pending.
      operationId: post_workflows_key_prepare_next_jobs_for_submission
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1.0
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: Jobs that are ready for submission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_workflows_key_prepare_next_jobs_for_submission_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/prepare_jobs_for_scheduling:
    post:
      tags: []
      summary: Return scheduler IDs that need to be activated.
      description: Return scheduler IDs that need to be activated. Sets job status
        to scheduled.
      operationId: post_workflows_key_prepare_jobs_for_scheduling
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: Schedulers that need to be activated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_workflows_key_prepare_jobs_for_scheduling_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/auto_tune_resource_requirements:
    post:
      tags: []
      summary: Enable workflow for auto-tuning resource requirements.
      description: Enable workflow for auto-tuning resource requirements.
      operationId: post_workflows_key_auto_tune_resource_requirements
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: Message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/process_auto_tune_resource_requirements_results:
    post:
      tags: []
      summary: Process the results of auto-tuning resource requirements.
      description: Process the results of auto-tuning resource requirements.
      operationId: post_workflows_key_process_auto_tune_resource_requirements_results
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: Message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/config:
    get:
      tags: []
      summary: Returns the workflow config.
      description: Returns the workflow config.
      operationId: get_workflows_key_config
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_config_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Updates the workflow config.
      description: Updates the workflow config.
      operationId: put_workflows_key_config
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Updated workflow config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_config_model'
        required: true
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_config_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/cancel:
    put:
      tags: []
      summary: Cancel workflow.
      description: Cancel workflow. Workers will detect the status change and cancel
        jobs.
      operationId: put_workflows_key_cancel
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/reset_status:
    post:
      tags: []
      summary: Reset worklow status.
      description: Reset workflow status.
      operationId: post_workflows_key_reset_status
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/reset_job_status:
    post:
      tags: []
      summary: Reset job status.
      description: Reset status for jobs to uninitialized.
      operationId: post_workflows_key_reset_job_status
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: failed_only
        in: query
        description: Only reset failed jobs
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/status:
    get:
      tags: []
      summary: Reports the workflow status.
      description: Reports the workflow status.
      operationId: get_workflows_key_status
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_status_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Reports the workflow status.
      description: Reports the workflow status.
      operationId: put_workflows_key_status
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Updated workflow status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_status_model'
        required: true
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_status_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/collection_names:
    get:
      tags: []
      summary: Retrieve all collection names for one workflow.
      description: Retrieve all collection names for one workflow.
      operationId: get_workflows_key_collection_names
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_key_collection_names_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflows/{key}/join_by_inbound_edge/{collection}/{edge}:
    post:
      tags: []
      summary: Retrieve a joined table of two collections.
      description: Retrieve a table of the collections joined by an inbound edge.
      operationId: post_workflows_key_join_by_inbound_edge_collection_edge
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: collection
        in: path
        description: From collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edge
        in: path
        description: Edge name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: collection_key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: collection_name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      requestBody:
        description: Filters for query
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_workflows_key_join_by_inbound_edge_collection_edge_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/join_by_outbound_edge/{collection}/{edge}:
    post:
      tags: []
      summary: Retrieve a joined table of two collections.
      description: Retrieve a table of the collections joined by an outbound edge.
      operationId: post_workflows_key_join_by_outbound_edge_collection_edge
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: collection
        in: path
        description: From collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edge
        in: path
        description: Edge name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: collection_key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: collection_name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      requestBody:
        description: Filters for query
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_workflows_key_join_by_outbound_edge_collection_edge_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/dot_graph/{name}:
    get:
      tags: []
      summary: Build a string for a DOT graph.
      description: Build a string for a DOT graph.
      operationId: get_workflows_key_dot_graph_name
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: Graph name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_workflows_key_dot_graph_name_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
components:
  schemas:
    workflow_status_model:
      required:
      - auto_tune_status
      - is_canceled
      - run_id
      type: object
      properties:
        is_canceled:
          type: boolean
        run_id:
          type: integer
        auto_tune_status:
          $ref: '#/components/schemas/auto_tune_status'
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_specifications_schedulers:
      type: object
      properties:
        aws_schedulers:
          type: array
          items:
            $ref: '#/components/schemas/workflow_aws_schedulers_model'
        local_schedulers:
          type: array
          items:
            $ref: '#/components/schemas/workflow_local_schedulers_model'
        slurm_schedulers:
          type: array
          items:
            $ref: '#/components/schemas/workflow_slurm_schedulers_model'
    workflow_job_process_stats_model:
      required:
      - avg_cpu_percent
      - avg_rss
      - job_key
      - max_cpu_percent
      - max_rss
      - num_samples
      - run_id
      - timestamp
      type: object
      properties:
        job_key:
          type: string
        run_id:
          type: integer
        avg_cpu_percent:
          type: number
        max_cpu_percent:
          type: number
        avg_rss:
          type: number
        max_rss:
          type: number
        num_samples:
          type: integer
        timestamp:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_config_model:
      type: object
      properties:
        compute_node_resource_stats:
          $ref: '#/components/schemas/compute_node_resource_stats_model'
        compute_node_expiration_buffer_seconds:
          type: number
        compute_node_wait_for_new_jobs_seconds:
          type: number
        compute_node_ignore_workflow_completion:
          type: boolean
          default: false
        compute_node_wait_for_healthy_database_minutes:
          type: number
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_results_model:
      required:
      - completion_time
      - exec_time_minutes
      - job_key
      - return_code
      - run_id
      - status
      type: object
      properties:
        job_key:
          type: string
        run_id:
          type: integer
        return_code:
          type: integer
        exec_time_minutes:
          type: number
        completion_time:
          type: string
        status:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_aws_schedulers_model:
      type: object
      properties:
        name:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    inline_response_500:
      required:
      - error
      type: object
      properties:
        error:
          type: object
        errorNum:
          type: integer
        errorMessage:
          type: string
        code:
          type: integer
    edges_name_model:
      required:
      - _from
      - _to
      type: object
      properties:
        _from:
          type: string
        _to:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_scheduled_compute_nodes_model:
      required:
      - scheduler_config_id
      - status
      type: object
      properties:
        scheduler_id:
          type: string
        scheduler_config_id:
          type: string
        status:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_slurm_schedulers_model:
      required:
      - account
      - nodes
      type: object
      properties:
        name:
          type: string
        account:
          type: string
        gres:
          type: string
        mem:
          type: string
        nodes:
          type: integer
        partition:
          type: string
        qos:
          type: string
          default: normal
        tmp:
          type: string
        walltime:
          type: string
        extra:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    auto_tune_status:
      type: object
      properties:
        enabled:
          type: boolean
          default: false
        job_keys:
          type: array
          items:
            type: string
    compute_nodes_resources:
      required:
      - memory_gb
      - num_cpus
      type: object
      properties:
        num_cpus:
          type: integer
        memory_gb:
          type: number
        num_gpus:
          type: integer
        num_nodes:
          type: integer
        time_limit:
          type: string
        scheduler_config_id:
          type: string
    compute_node_stats:
      required:
      - average
      - maximum
      - minimum
      - num_samples
      - resource_type
      type: object
      properties:
        resource_type:
          type: string
        average:
          type: object
          properties: {}
        minimum:
          type: object
          properties: {}
        maximum:
          type: object
          properties: {}
        num_samples:
          type: integer
        job_key:
          type: string
    workflow_local_schedulers_model:
      type: object
      properties:
        name:
          type: string
          default: default
        memory:
          type: string
        num_cpus:
          type: integer
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflows_model:
      type: object
      properties:
        name:
          type: string
        user:
          type: string
        description:
          type: string
        timestamp:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_compute_nodes_model:
      required:
      - hostname
      - pid
      - resources
      - start_time
      type: object
      properties:
        hostname:
          type: string
        pid:
          type: integer
        start_time:
          type: string
        duration_seconds:
          type: number
        is_active:
          type: boolean
        resources:
          $ref: '#/components/schemas/compute_nodes_resources'
        scheduler:
          type: object
          properties: {}
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_compute_node_stats_model:
      required:
      - hostname
      - timestamp
      type: object
      properties:
        hostname:
          type: string
        stats:
          type: array
          items:
            $ref: '#/components/schemas/compute_node_stats'
        timestamp:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_user_data_model:
      type: object
      properties:
        is_ephemeral:
          type: boolean
          default: false
        name:
          type: string
        data:
          type: object
          properties: {}
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_resource_requirements_model:
      type: object
      properties:
        name:
          type: string
        num_cpus:
          type: integer
        num_gpus:
          type: integer
        num_nodes:
          type: integer
        memory:
          type: string
          default: 1m
        runtime:
          type: string
          default: P0DT1M
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_files_model:
      required:
      - path
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        st_mtime:
          type: number
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_jobs_model:
      required:
      - command
      type: object
      properties:
        name:
          type: string
        command:
          type: string
        invocation_script:
          type: string
        status:
          type: string
        needs_compute_node_schedule:
          type: boolean
          default: false
        cancel_on_blocking_job_failure:
          type: boolean
          default: true
        supports_termination:
          type: boolean
          default: false
        internal:
          $ref: '#/components/schemas/jobs_internal'
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_specifications_model:
      type: object
      properties:
        name:
          type: string
        key:
          type: string
        user:
          type: string
        description:
          type: string
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/workflow_job_specifications_model'
        files:
          type: array
          items:
            $ref: '#/components/schemas/workflow_files_model'
        user_data:
          type: array
          items:
            $ref: '#/components/schemas/workflow_user_data_model'
        resource_requirements:
          type: array
          items:
            $ref: '#/components/schemas/workflow_resource_requirements_model'
        schedulers:
          $ref: '#/components/schemas/workflow_specifications_schedulers'
        config:
          $ref: '#/components/schemas/workflow_config_model'
    workflow_job_specifications_model:
      required:
      - command
      type: object
      properties:
        name:
          type: string
        key:
          type: string
        command:
          type: string
        invocation_script:
          type: string
        cancel_on_blocking_job_failure:
          type: boolean
          default: true
        supports_termination:
          type: boolean
          default: false
        scheduler:
          type: string
        needs_compute_node_schedule:
          type: boolean
          default: false
        consumes_user_data:
          type: array
          items:
            type: string
        stores_user_data:
          type: array
          items:
            type: string
        resource_requirements:
          type: string
        input_files:
          type: array
          items:
            type: string
        output_files:
          type: array
          items:
            type: string
        blocked_by:
          type: array
          items:
            type: string
    jobs_internal:
      type: object
      properties:
        memory_bytes:
          type: integer
        num_cpus:
          type: integer
        num_gpus:
          type: integer
        runtime_seconds:
          type: number
        scheduler_config_id:
          type: string
        hash:
          type: integer
    compute_node_resource_stats_model:
      type: object
      properties:
        cpu:
          type: boolean
          default: true
        disk:
          type: boolean
          default: false
        memory:
          type: boolean
          default: true
        network:
          type: boolean
          default: false
        process:
          type: boolean
          default: false
        include_child_processes:
          type: boolean
          default: true
        recurse_child_processes:
          type: boolean
          default: false
        monitor_type:
          type: string
          default: aggregation
        make_plots:
          type: boolean
          default: true
        interval:
          type: number
    get_workflows_workflow_aws_schedulers_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/workflow_aws_schedulers_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    get_workflows_workflow_compute_nodes_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/workflow_compute_nodes_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    get_workflows_workflow_compute_node_stats_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/workflow_compute_node_stats_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    get_workflows_workflow_events_response: &id004
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties: {}
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    get_workflows_workflow_files_response: &id001
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/workflow_files_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    get_workflows_workflow_jobs_response: &id002
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/workflow_jobs_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    get_workflows_workflow_job_process_stats_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/workflow_job_process_stats_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    get_workflows_workflow_local_schedulers_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/workflow_local_schedulers_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    get_workflows_workflow_resource_requirements_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/workflow_resource_requirements_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    get_workflows_workflow_results_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/workflow_results_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    get_workflows_workflow_scheduled_compute_nodes_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/workflow_scheduled_compute_nodes_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    get_workflows_workflow_slurm_schedulers_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/workflow_slurm_schedulers_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    get_workflows_workflow_user_data_response: &id003
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/workflow_user_data_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    get_workflows_workflow_edges_name_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/edges_name_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    get_workflows_workflow_files_produced_by_job_key_response: *id001
    get_workflows_workflow_job_specifications_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/workflow_job_specifications_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    get_workflows_workflow_jobs_find_by_status_status_response: *id002
    get_workflows_workflow_jobs_find_by_needs_file_key_response: *id002
    get_workflows_workflow_jobs_key_user_data_stores_response: *id003
    get_workflows_workflow_jobs_key_user_data_consumes_response: *id003
    get_workflows_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/workflows_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    get_workflows_key_is_complete_response:
      required:
      - is_canceled
      - is_complete
      type: object
      properties:
        is_canceled:
          type: boolean
        is_complete:
          type: boolean
    get_workflows_key_ready_job_requirements_response:
      required:
      - max_memory_gb
      - max_num_nodes
      - max_runtime
      - memory_gb
      - num_cpus
      - num_gpus
      - num_jobs
      type: object
      properties:
        num_jobs:
          type: integer
        num_cpus:
          type: integer
        num_gpus:
          type: integer
        memory_gb:
          type: number
        max_memory_gb:
          type: number
        max_num_nodes:
          type: integer
        max_runtime:
          type: string
    post_workflows_key_process_changed_job_inputs_response:
      type: object
      properties:
        reinitialized_jobs:
          type: array
          items:
            type: string
    get_workflows_key_missing_user_data_response:
      type: object
      properties:
        user_data:
          type: array
          items:
            type: string
    get_workflows_key_required_existing_files_response:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
    post_workflows_key_prepare_jobs_for_submission_response:
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/workflow_jobs_model'
        reason:
          type: string
    post_workflows_key_prepare_next_jobs_for_submission_response:
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/workflow_jobs_model'
    post_workflows_key_prepare_jobs_for_scheduling_response:
      type: object
      properties:
        schedulers:
          type: array
          items:
            type: string
    get_workflows_key_collection_names_response:
      type: object
      properties:
        names:
          type: array
          items:
            type: string
    post_workflows_key_join_by_inbound_edge_collection_edge_response: *id004
    post_workflows_key_join_by_outbound_edge_collection_edge_response: *id004
    get_workflows_key_dot_graph_name_response:
      required:
      - graph
      type: object
      properties:
        graph:
          type: string
x-original-swagger-version: '2.0'
