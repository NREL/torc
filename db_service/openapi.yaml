openapi: 3.0.1
info:
  description: ''
  license:
    name: BSD 3-Clause
  title: torc
  version: v0.3.2
servers:
- url: /_db/test-workflows/torc-service
paths:
  /workflows/{workflow}/aws_schedulers:
    get:
      tags: []
      summary: Retrieve all AWS compute node configuration documents
      description: Retrieve all documents from the "aws_schedulers" collection for
        one workflow.
      operationId: list_aws_schedulers
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_aws_schedulers_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    post:
      tags: []
      summary: Store a AWS compute node configuration.
      description: Store a AWS compute node configuration in the "aws_schedulers"
        collection.
      operationId: add_aws_scheduler
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: AWS compute node configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aws_scheduler_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of AWS compute node configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aws_scheduler_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type AWS compute node configuration for a workflow
      description: Delete all documents from the "aws_schedulers" collection for a
        workflow.
      operationId: delete_aws_schedulers
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/aws_schedulers/{key}:
    get:
      tags: []
      summary: Retrieve the AWS compute node configuration for a key.
      description: Retrieve the document from the "aws_schedulers" collection by key.
      operationId: get_aws_scheduler
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the aws_schedulers document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aws_scheduler_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    put:
      tags: []
      summary: Update AWS compute node configuration
      description: Update a document in the "aws_schedulers" collection.
      operationId: modify_aws_scheduler
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the AWS compute node configuration.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: AWS compute node configuration to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aws_scheduler_model'
        required: true
      responses:
        '200':
          description: AWS compute node configuration updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aws_scheduler_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type AWS compute node configuration
      description: Deletes a document from the "aws_schedulers" collection by key.
      operationId: remove_aws_scheduler
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the AWS compute node configuration document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: AWS compute node configuration stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aws_scheduler_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/compute_nodes:
    get:
      tags: []
      summary: Retrieve all compute node documents
      description: Retrieve all documents from the "compute_nodes" collection for
        one workflow.
      operationId: list_compute_nodes
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: hostname
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: is_active
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_compute_nodes_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    post:
      tags: []
      summary: Store a compute node.
      description: Store a compute node in the "compute_nodes" collection.
      operationId: add_compute_node
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: compute node.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compute_node_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of compute node.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/compute_node_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type compute node for a workflow
      description: Delete all documents from the "compute_nodes" collection for a
        workflow.
      operationId: delete_compute_nodes
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/compute_nodes/{key}:
    get:
      tags: []
      summary: Retrieve the compute node for a key.
      description: Retrieve the document from the "compute_nodes" collection by key.
      operationId: get_compute_node
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the compute_nodes document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/compute_node_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    put:
      tags: []
      summary: Update compute node
      description: Update a document in the "compute_nodes" collection.
      operationId: modify_compute_node
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the compute node.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: compute node to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compute_node_model'
        required: true
      responses:
        '200':
          description: compute node updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/compute_node_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type compute node
      description: Deletes a document from the "compute_nodes" collection by key.
      operationId: remove_compute_node
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the compute node document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: compute node stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/compute_node_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/compute_node_stats:
    get:
      tags: []
      summary: Retrieve all compute node statistics documents
      description: Retrieve all documents from the "compute_node_stats" collection
        for one workflow.
      operationId: list_compute_node_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: hostname
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_compute_node_stats_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    post:
      tags: []
      summary: Store a compute node statistics.
      description: Store a compute node statistics in the "compute_node_stats" collection.
      operationId: add_compute_node_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: compute node statistics.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compute_node_stats_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of compute node statistics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/compute_node_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type compute node statistics for a workflow
      description: Delete all documents from the "compute_node_stats" collection for
        a workflow.
      operationId: delete_compute_node_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/compute_node_stats/{key}:
    get:
      tags: []
      summary: Retrieve the compute node statistics for a key.
      description: Retrieve the document from the "compute_node_stats" collection
        by key.
      operationId: get_compute_node_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the compute_node_stats document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/compute_node_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    put:
      tags: []
      summary: Update compute node statistics
      description: Update a document in the "compute_node_stats" collection.
      operationId: modify_compute_node_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the compute node statistics.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: compute node statistics to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compute_node_stats_model'
        required: true
      responses:
        '200':
          description: compute node statistics updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/compute_node_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type compute node statistics
      description: Deletes a document from the "compute_node_stats" collection by
        key.
      operationId: remove_compute_node_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the compute node statistics document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: compute node statistics stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/compute_node_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/events:
    get:
      tags: []
      summary: Retrieve all event documents
      description: Retrieve all documents from the "events" collection for one workflow.
      operationId: list_events
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_events_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    post:
      tags: []
      summary: Store a event.
      description: Store a event in the "events" collection.
      operationId: add_event
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: event.
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: Response from posting an instance of event.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type event for a workflow
      description: Delete all documents from the "events" collection for a workflow.
      operationId: delete_events
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/events/{key}:
    get:
      tags: []
      summary: Retrieve the event for a key.
      description: Retrieve the document from the "events" collection by key.
      operationId: get_event
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the events document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    put:
      tags: []
      summary: Update event
      description: Update a document in the "events" collection.
      operationId: modify_event
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the event.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: event to update in the collection.
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: event updated in the collection.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type event
      description: Deletes a document from the "events" collection by key.
      operationId: remove_event
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the event document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: event stored in the collection.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/files:
    get:
      tags: []
      summary: Retrieve all file documents
      description: Retrieve all documents from the "files" collection for one workflow.
      operationId: list_files
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: path
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_files_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    post:
      tags: []
      summary: Store a file.
      description: Store a file in the "files" collection.
      operationId: add_file
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: file.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/file_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of file.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type file for a workflow
      description: Delete all documents from the "files" collection for a workflow.
      operationId: delete_files
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/files/{key}:
    get:
      tags: []
      summary: Retrieve the file for a key.
      description: Retrieve the document from the "files" collection by key.
      operationId: get_file
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the files document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    put:
      tags: []
      summary: Update file
      description: Update a document in the "files" collection.
      operationId: modify_file
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the file.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: file to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/file_model'
        required: true
      responses:
        '200':
          description: file updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type file
      description: Deletes a document from the "files" collection by key.
      operationId: remove_file
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the file document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: file stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/jobs:
    get:
      tags: []
      summary: Retrieve all job documents
      description: Retrieve all documents from the "jobs" collection for one workflow.
      operationId: list_jobs
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: command
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cancel_on_blocking_job_failure
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: supports_termination
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_jobs_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    post:
      tags: []
      summary: Store a job.
      description: Store a job in the "jobs" collection.
      operationId: add_job
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: job.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/job_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type job for a workflow
      description: Delete all documents from the "jobs" collection for a workflow.
      operationId: delete_jobs
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/jobs/{key}:
    get:
      tags: []
      summary: Retrieve the job for a key.
      description: Retrieve the document from the "jobs" collection by key.
      operationId: get_job
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the jobs document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    put:
      tags: []
      summary: Update job
      description: Update a document in the "jobs" collection.
      operationId: modify_job
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the job.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: job to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/job_model'
        required: true
      responses:
        '200':
          description: job updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type job
      description: Deletes a document from the "jobs" collection by key.
      operationId: remove_job
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the job document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: job stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/job_process_stats:
    get:
      tags: []
      summary: Retrieve all job process statistics documents
      description: Retrieve all documents from the "job_process_stats" collection
        for one workflow.
      operationId: list_job_process_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: job_key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: run_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_job_process_stats_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    post:
      tags: []
      summary: Store a job process statistics.
      description: Store a job process statistics in the "job_process_stats" collection.
      operationId: add_job_process_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: job process statistics.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/job_process_stats_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of job process statistics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_process_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type job process statistics for a workflow
      description: Delete all documents from the "job_process_stats" collection for
        a workflow.
      operationId: delete_job_process_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/job_process_stats/{key}:
    get:
      tags: []
      summary: Retrieve the job process statistics for a key.
      description: Retrieve the document from the "job_process_stats" collection by
        key.
      operationId: get_job_process_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the job_process_stats document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_process_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    put:
      tags: []
      summary: Update job process statistics
      description: Update a document in the "job_process_stats" collection.
      operationId: modify_job_process_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the job process statistics.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: job process statistics to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/job_process_stats_model'
        required: true
      responses:
        '200':
          description: job process statistics updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_process_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type job process statistics
      description: Deletes a document from the "job_process_stats" collection by key.
      operationId: remove_job_process_stats
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the job process statistics document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: job process statistics stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_process_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/local_schedulers:
    get:
      tags: []
      summary: Retrieve all local compute node configuration documents
      description: Retrieve all documents from the "local_schedulers" collection for
        one workflow.
      operationId: list_local_schedulers
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: memory
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: num_cpus
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_local_schedulers_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    post:
      tags: []
      summary: Store a local compute node configuration.
      description: Store a local compute node configuration in the "local_schedulers"
        collection.
      operationId: add_local_scheduler
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: local compute node configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/local_scheduler_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of local compute node configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/local_scheduler_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type local compute node configuration for a
        workflow
      description: Delete all documents from the "local_schedulers" collection for
        a workflow.
      operationId: delete_local_schedulers
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/local_schedulers/{key}:
    get:
      tags: []
      summary: Retrieve the local compute node configuration for a key.
      description: Retrieve the document from the "local_schedulers" collection by
        key.
      operationId: get_local_scheduler
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the local_schedulers document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/local_scheduler_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    put:
      tags: []
      summary: Update local compute node configuration
      description: Update a document in the "local_schedulers" collection.
      operationId: modify_local_scheduler
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the local compute node configuration.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: local compute node configuration to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/local_scheduler_model'
        required: true
      responses:
        '200':
          description: local compute node configuration updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/local_scheduler_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type local compute node configuration
      description: Deletes a document from the "local_schedulers" collection by key.
      operationId: remove_local_scheduler
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the local compute node configuration document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: local compute node configuration stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/local_scheduler_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/resource_requirements:
    get:
      tags: []
      summary: Retrieve all resource requirements documents
      description: Retrieve all documents from the "resource_requirements" collection
        for one workflow.
      operationId: list_resource_requirements
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: memory
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: num_cpus
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: num_gpus
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: num_nodes
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: runtime
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_resource_requirements_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    post:
      tags: []
      summary: Store a resource requirements.
      description: Store a resource requirements in the "resource_requirements" collection.
      operationId: add_resource_requirements
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: resource requirements.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resource_requirements_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of resource requirements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resource_requirements_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type resource requirements for a workflow
      description: Delete all documents from the "resource_requirements" collection
        for a workflow.
      operationId: delete_resource_requirements
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/resource_requirements/{key}:
    get:
      tags: []
      summary: Retrieve the resource requirements for a key.
      description: Retrieve the document from the "resource_requirements" collection
        by key.
      operationId: get_resource_requirements
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the resource_requirements document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resource_requirements_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    put:
      tags: []
      summary: Update resource requirements
      description: Update a document in the "resource_requirements" collection.
      operationId: modify_resource_requirements
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the resource requirements.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: resource requirements to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resource_requirements_model'
        required: true
      responses:
        '200':
          description: resource requirements updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resource_requirements_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type resource requirements
      description: Deletes a document from the "resource_requirements" collection
        by key.
      operationId: remove_resource_requirements
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the resource requirements document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: resource requirements stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resource_requirements_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/results:
    get:
      tags: []
      summary: Retrieve all result documents
      description: Retrieve all documents from the "results" collection for one workflow.
      operationId: list_results
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: job_key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: run_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: return_code
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_results_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    post:
      tags: []
      summary: Store a result.
      description: Store a result in the "results" collection.
      operationId: add_result
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: result.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/result_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type result for a workflow
      description: Delete all documents from the "results" collection for a workflow.
      operationId: delete_results
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/results/{key}:
    get:
      tags: []
      summary: Retrieve the result for a key.
      description: Retrieve the document from the "results" collection by key.
      operationId: get_result
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the results document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    put:
      tags: []
      summary: Update result
      description: Update a document in the "results" collection.
      operationId: modify_result
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the result.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: result to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/result_model'
        required: true
      responses:
        '200':
          description: result updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type result
      description: Deletes a document from the "results" collection by key.
      operationId: remove_result
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the result document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: result stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/scheduled_compute_nodes:
    get:
      tags: []
      summary: Retrieve all scheduled compute node documents
      description: Retrieve all documents from the "scheduled_compute_nodes" collection
        for one workflow.
      operationId: list_scheduled_compute_nodes
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: scheduler_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: scheduler_config_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_scheduled_compute_nodes_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    post:
      tags: []
      summary: Store a scheduled compute node.
      description: Store a scheduled compute node in the "scheduled_compute_nodes"
        collection.
      operationId: add_scheduled_compute_node
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: scheduled compute node.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scheduled_compute_nodes_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of scheduled compute node.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scheduled_compute_nodes_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type scheduled compute node for a workflow
      description: Delete all documents from the "scheduled_compute_nodes" collection
        for a workflow.
      operationId: delete_scheduled_compute_nodes
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/scheduled_compute_nodes/{key}:
    get:
      tags: []
      summary: Retrieve the scheduled compute node for a key.
      description: Retrieve the document from the "scheduled_compute_nodes" collection
        by key.
      operationId: get_scheduled_compute_node
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the scheduled_compute_nodes document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scheduled_compute_nodes_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    put:
      tags: []
      summary: Update scheduled compute node
      description: Update a document in the "scheduled_compute_nodes" collection.
      operationId: modify_scheduled_compute_node
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the scheduled compute node.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: scheduled compute node to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scheduled_compute_nodes_model'
        required: true
      responses:
        '200':
          description: scheduled compute node updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scheduled_compute_nodes_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type scheduled compute node
      description: Deletes a document from the "scheduled_compute_nodes" collection
        by key.
      operationId: remove_scheduled_compute_node
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the scheduled compute node document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: scheduled compute node stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scheduled_compute_nodes_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/slurm_schedulers:
    get:
      tags: []
      summary: Retrieve all Slurm compute node configuration documents
      description: Retrieve all documents from the "slurm_schedulers" collection for
        one workflow.
      operationId: list_slurm_schedulers
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: account
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: gres
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: mem
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nodes
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: partition
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: qos
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tmp
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: walltime
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_slurm_schedulers_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    post:
      tags: []
      summary: Store a Slurm compute node configuration.
      description: Store a Slurm compute node configuration in the "slurm_schedulers"
        collection.
      operationId: add_slurm_scheduler
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Slurm compute node configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/slurm_scheduler_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of Slurm compute node configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/slurm_scheduler_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type Slurm compute node configuration for a
        workflow
      description: Delete all documents from the "slurm_schedulers" collection for
        a workflow.
      operationId: delete_slurm_schedulers
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/slurm_schedulers/{key}:
    get:
      tags: []
      summary: Retrieve the Slurm compute node configuration for a key.
      description: Retrieve the document from the "slurm_schedulers" collection by
        key.
      operationId: get_slurm_scheduler
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the slurm_schedulers document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/slurm_scheduler_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    put:
      tags: []
      summary: Update Slurm compute node configuration
      description: Update a document in the "slurm_schedulers" collection.
      operationId: modify_slurm_scheduler
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the Slurm compute node configuration.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Slurm compute node configuration to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/slurm_scheduler_model'
        required: true
      responses:
        '200':
          description: Slurm compute node configuration updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/slurm_scheduler_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type Slurm compute node configuration
      description: Deletes a document from the "slurm_schedulers" collection by key.
      operationId: remove_slurm_scheduler
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the Slurm compute node configuration document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: Slurm compute node configuration stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/slurm_scheduler_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/user_data:
    get:
      tags: []
      summary: Retrieve all user data documents
      description: Retrieve all documents from the "user_data" collection for one
        workflow.
      operationId: list_user_data
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: _key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: is_ephemeral
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_user_data_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    post:
      tags: []
      summary: Store a user data.
      description: Store a user data in the "user_data" collection.
      operationId: add_user_data
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: user data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_data_model'
        required: true
      responses:
        '200':
          description: Response from posting an instance of user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_data_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all documents of type user data for a workflow
      description: Delete all documents from the "user_data" collection for a workflow.
      operationId: delete_user_data
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/user_data/{key}:
    get:
      tags: []
      summary: Retrieve the user data for a key.
      description: Retrieve the document from the "user_data" collection by key.
      operationId: get_user_data
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the user_data document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_data_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    put:
      tags: []
      summary: Update user data
      description: Update a document in the "user_data" collection.
      operationId: modify_user_data
      parameters:
      - name: workflow
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the user data.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: user data to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_data_model'
        required: true
      responses:
        '200':
          description: user data updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_data_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a document of type user data
      description: Deletes a document from the "user_data" collection by key.
      operationId: remove_user_data
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: key of the user data document.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: user data stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_data_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/edges/{name}:
    get:
      tags: []
      summary: Retrieve all edges from the designated collection.
      description: Retrieve all edges from the designated collection.
      operationId: list_edges
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: Edge collection name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_edges_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    post:
      tags: []
      summary: Store an edge between two vertexes.
      description: Store an edge between two vertexes in the designated collection.
      operationId: add_edge
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: Edge name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Relationship between two vertexes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/edge_model'
        required: true
      responses:
        '200':
          description: Edge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edge_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all edges from the designated collection
      description: Deletes all edges from the designated collection.
      operationId: delete_edges
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: Edge collection name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/edges/{name}/{key}:
    get:
      tags: []
      summary: Retrieve an edge
      description: Retrieves an edge from the designated collection by key.
      operationId: get_edge
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: Edge collection name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Edge key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Edge stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edge_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    delete:
      tags: []
      summary: Delete an edge
      description: Deletes an edge from the designated collection by key.
      operationId: remove_edge
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: Edge name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Edge key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: Edge stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edge_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/files/produced_by_job/{key}:
    get:
      tags: []
      summary: Retrieve files produced by a job
      description: Retrieves files from the "files" collection produced by a job.
      operationId: list_files_produced_by_job
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_files_produced_by_job'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows/{workflow}/job_specifications:
    get:
      tags: []
      summary: Retrieve all job definitions
      description: Retrieves all job definitions. Limit output with skip and limit.
      operationId: list_job_specifications
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_job_specifications_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows/{workflow}/job_specifications/{key}:
    get:
      tags: []
      summary: Retrieve a job
      description: Retrieves a job from the "jobs" collection by key.
      operationId: get_job_specification
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Job stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_specification_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows/{workflow}/bulk_jobs:
    post:
      tags: []
      summary: Add jobs in bulk.
      description: Add jobs in bulk. Recommended max job count of 10,000.
      operationId: add_jobs
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jobs_model'
        required: true
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_jobs_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/job_keys:
    get:
      tags: []
      summary: Retrieve all job keys for a workflow.
      description: Retrieves all job keys from the "jobs" collection for a workflow.
      operationId: list_job_keys
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows/{workflow}/jobs/find_by_status/{status}:
    get:
      tags: []
      summary: Retrieve all jobs with a specific status
      description: Retrieves all jobs from the "jobs" collection with a specific status.
      operationId: list_jobs_by_status
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: status
        in: path
        description: Job status.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_jobs_by_status_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows/{workflow}/jobs/find_by_needs_file/{key}:
    get:
      tags: []
      summary: Retrieve all jobs that need a file
      description: Retrieves all jobs connected to a file by the needs edge.
      operationId: list_jobs_by_needs_file
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: File key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_jobs_by_needs_file_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows/{workflow}/jobs/{key}/resource_requirements:
    get:
      tags: []
      summary: Retrieve the resource requirements for a job.
      description: Retrieve the resource requirements for a job by its key.
      operationId: get_job_resource_requirements
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Resource requirements for the job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resource_requirements_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows/{workflow}/jobs/{key}/resource_requirements/{rr_key}:
    put:
      tags: []
      summary: Set the resource requirements for a job.
      description: Set the resource requirements for a job, replacing any current
        value.
      operationId: modify_job_resource_requirements
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: rr_key
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: Requires edge that connects the job and resource requirements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edge_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/jobs/{key}/process_stats:
    get:
      tags: []
      summary: Retrieve the job process stats for a job.
      description: Retrieve the job process stats for a job by its key.
      operationId: get_process_stats_for_job
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Process stats for the job.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/job_process_stats_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows/{workflow}/jobs/{key}/complete_job/{status}/{rev}/{run_id}:
    post:
      tags: []
      summary: Complete a job and add a result.
      description: Complete a job, connect it to a result, and manage side effects.
      operationId: complete_job
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: status
        in: path
        description: New job status.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: rev
        in: path
        description: Current job revision.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: run_id
        in: path
        description: Current job run ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Result of the job.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/result_model'
        required: true
      responses:
        '200':
          description: job completed in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/jobs/{key}/manage_status_change/{status}/{rev}/{run_id}:
    put:
      tags: []
      summary: Change the status of a job and manage side effects.
      description: Change the status of a job and manage side effects.
      operationId: manage_status_change
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: status
        in: path
        description: New job status
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: rev
        in: path
        description: Current job revision
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: run_id
        in: path
        description: Current job run ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: Updated job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/jobs/{key}/user_data:
    post:
      tags: []
      summary: Store user data for a job.
      description: Store user data for a job and connect the two vertexes.
      operationId: add_job_user_data
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: User data for the job.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_data_model'
        required: true
      responses:
        '200':
          description: Database information for the user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_data_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{workflow}/jobs/{key}/user_data_stores:
    get:
      tags: []
      summary: Retrieve all user data for a job.
      description: Retrieve all user data for a job.
      operationId: list_job_user_data_stores
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: All user data stored for the job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_job_user_data_stores_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows/{workflow}/jobs/{key}/user_data_consumes:
    get:
      tags: []
      summary: Retrieve all user data consumed by a job.
      description: Retrieve all user data consumed by a job.
      operationId: list_job_user_data_consumes
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: All user data consumed by the job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_job_user_data_consumes_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows/{workflow}/results/find_by_job/{key}:
    get:
      tags: []
      summary: Retrieve the latest result for a job
      description: Retrieve the latest result for a job. Throws an error if no result
        is stored.
      operationId: get_latest_job_result
      parameters:
      - name: workflow
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Job key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflow_specifications:
    post:
      tags: []
      summary: Store a workflow.
      description: Store a workflow.
      operationId: add_workflow_specification
      requestBody:
        description: New workflow
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_specification_model'
        required: true
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflow_specifications/{key}:
    get:
      tags: []
      summary: Retrieve the current workflow
      description: Retrieves the current workflow in JSON format.
      operationId: get_workflow_specification
      parameters:
      - name: key
        in: path
        description: key of the workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Stored workflow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_specification_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflow_specifications/example:
    get:
      tags: []
      summary: Retrieve an example workflow specification
      description: Retrieves an example workflow specification in JSON format.
      operationId: get_workflow_specification_example
      responses:
        '200':
          description: Example workflow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_specification_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflow_specifications/template:
    get:
      tags: []
      summary: Retrieve the workflow specification template
      description: Retrieve the workflow specification template in JSON format.
      operationId: get_workflow_specification_template
      responses:
        '200':
          description: Workflow template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_specification_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /ping:
    get:
      tags: []
      summary: Check if the service is running.
      description: Check if the service is running.
      operationId: ping
      responses:
        '200':
          description: Message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /version:
    get:
      tags: []
      summary: Return the version of the service.
      description: Return the version of the service.
      operationId: get_version
      responses:
        '200':
          description: Version
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows:
    get:
      tags: []
      summary: Retrieve all workflows
      description: Retrieves all documents from the "workflows" collection.
      operationId: list_workflows
      parameters:
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: reverse_sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      - name: name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: user
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: description
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_workflows_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    post:
      tags: []
      summary: Store a workflow.
      description: Store a workflow in the "workflows" collection.
      operationId: add_workflow
      requestBody:
        description: Collection of jobs and dependent resources.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_model'
        required: true
      responses:
        '200':
          description: Collection of jobs and dependent resources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}:
    get:
      tags: []
      summary: Retrieve the workflow for an key.
      description: Retrieve the document for a key from the "workflows" collection.
      operationId: get_workflow
      parameters:
      - name: key
        in: path
        description: key of the workflows document
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    put:
      tags: []
      summary: Update workflow
      description: Update a document in the "workflows" collection.
      operationId: modify_workflow
      parameters:
      - name: key
        in: path
        description: Key of the workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: workflow to update in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_model'
        required: true
      responses:
        '200':
          description: workflow updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a workflow
      description: Deletes a document from the "workflows" collection by key.
      operationId: remove_workflow
      parameters:
      - name: key
        in: path
        description: Workflow key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: workflow stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/is_complete:
    get:
      tags: []
      summary: Report whether the workflow is complete
      description: Reports true if all jobs in the workflow are complete.
      operationId: is_workflow_complete
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/is_complete_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows/{key}/ready_job_requirements:
    get:
      tags: []
      summary: Return the resource requirements for ready jobs.
      description: Return the resource requirements for jobs with a status of ready.
      operationId: get_ready_job_requirements
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scheduler_config_id
        in: query
        description: Limit output to jobs assigned this scheduler.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 'null'
          - ''
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_ready_job_requirements_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows/{key}/initialize_jobs:
    post:
      tags: []
      summary: Initialize job relationships.
      description: Initialize job relationships based on file and user_data relationships.
      operationId: initialize_jobs
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: only_uninitialized
        in: query
        description: Only initialize jobs with a status of uninitialized.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: clear_ephemeral_user_data
        in: query
        description: Clear all ephemeral user data.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/process_changed_job_inputs:
    post:
      tags: []
      summary: Check for changed job inputs and update status accordingly.
      description: Check for changed job inputs and update status accordingly.
      operationId: process_changed_job_inputs
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/process_changed_job_inputs_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/missing_user_data:
    get:
      tags: []
      summary: List missing user data that should exist.
      description: List missing user data that should exist.
      operationId: list_missing_user_data
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_missing_user_data_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows/{key}/required_existing_files:
    get:
      tags: []
      summary: List files that must exist.
      description: List files that must exist.
      operationId: list_required_existing_files
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_required_existing_files_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows/{key}/prepare_jobs_for_submission:
    post:
      tags: []
      summary: Return ready jobs, accounting for resource requirements.
      description: Return jobs that are ready for submission and meet worker resource
        Sets status to submitted_pending.
      operationId: prepare_jobs_for_submission
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sort_method
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - gpus_runtime_memory
          - gpus_memory_runtime
          - none
          default: gpus_runtime_memory
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      requestBody:
        description: Available worker resources.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compute_nodes_resources'
        required: true
      responses:
        '200':
          description: Jobs that are ready for submission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/prepare_jobs_for_submission_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/prepare_next_jobs_for_submission:
    post:
      tags: []
      summary: Return user-requested number of ready jobs.
      description: Return user-requested number of jobs that are ready for submission.
        Sets status to submitted_pending.
      operationId: prepare_next_jobs_for_submission
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1.0
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: Jobs that are ready for submission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/prepare_next_jobs_for_submission_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/prepare_jobs_for_scheduling:
    post:
      tags: []
      summary: Return scheduler IDs that need to be activated.
      description: Return scheduler IDs that need to be activated. Sets job status
        to scheduled.
      operationId: prepare_jobs_for_scheduling
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: Schedulers that need to be activated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/prepare_jobs_for_scheduling_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/auto_tune_resource_requirements:
    post:
      tags: []
      summary: Enable workflow for auto-tuning resource requirements.
      description: Enable workflow for auto-tuning resource requirements.
      operationId: auto_tune_resource_requirements
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: Message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/process_auto_tune_resource_requirements_results:
    post:
      tags: []
      summary: Process the results of auto-tuning resource requirements.
      description: Process the results of auto-tuning resource requirements.
      operationId: process_auto_tune_resource_requirements_results
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: Message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/config:
    get:
      tags: []
      summary: Returns the workflow config.
      description: Returns the workflow config.
      operationId: get_workflow_config
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_config_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    put:
      tags: []
      summary: Updates the workflow config.
      description: Updates the workflow config.
      operationId: modify_workflow_config
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Updated workflow config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_config_model'
        required: true
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_config_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/cancel:
    put:
      tags: []
      summary: Cancel workflow.
      description: Cancel workflow. Workers will detect the status change and cancel
        jobs.
      operationId: cancel_workflow
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/reset_status:
    post:
      tags: []
      summary: Reset worklow status.
      description: Reset workflow status.
      operationId: reset_workflow_status
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/reset_job_status:
    post:
      tags: []
      summary: Reset job status.
      description: Reset status for jobs to uninitialized.
      operationId: reset_job_status
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: failed_only
        in: query
        description: Only reset failed jobs
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/status:
    get:
      tags: []
      summary: Reports the workflow status.
      description: Reports the workflow status.
      operationId: get_workflow_status
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_status_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
    put:
      tags: []
      summary: Reports the workflow status.
      description: Reports the workflow status.
      operationId: modify_workflow_status
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Updated workflow status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_status_model'
        required: true
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_status_model'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/collection_names:
    get:
      tags: []
      summary: Retrieve all collection names for one workflow.
      description: Retrieve all collection names for one workflow.
      operationId: list_collection_names
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_collection_names_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows/{key}/join_by_inbound_edge/{collection}/{edge}:
    post:
      tags: []
      summary: Retrieve a joined table of two collections.
      description: Retrieve a table of the collections joined by an inbound edge.
      operationId: join_collections_by_inbound_edge
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: collection
        in: path
        description: From collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edge
        in: path
        description: Edge name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: collection_key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: collection_name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      requestBody:
        description: Filters for query
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/join_by_inbound_edge_collection_edge_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/join_by_outbound_edge/{collection}/{edge}:
    post:
      tags: []
      summary: Retrieve a joined table of two collections.
      description: Retrieve a table of the collections joined by an outbound edge.
      operationId: join_collections_by_outbound_edge
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: collection
        in: path
        description: From collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edge
        in: path
        description: Edge name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: collection_key
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: collection_name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      requestBody:
        description: Filters for query
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/join_by_outbound_edge_collection_edge_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
      x-codegen-request-body-name: body
  /workflows/{key}/latest_event_timestamp:
    get:
      tags: []
      summary: Return the timestamp of the latest event.
      description: Return the timestamp of the latest event in ms since the epoch
        in UTC.
      operationId: get_latest_event_timestamp
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows/{key}/events_after_timestamp/{timestamp}:
    get:
      tags: []
      summary: Return all events newer than the event with event_key.
      description: Return all events newer than the event with event_key.
      operationId: get_events_after_timestamp
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: path
        description: Timestamp expressed as number of milliseconds since the epoch
          in UTC
        required: true
        style: simple
        explode: false
        schema:
          type: number
      - name: category
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: 'null'
      - name: skip
        in: query
        description: Ignored
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 100000.0
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_events_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
  /workflows/{key}/dot_graph/{name}:
    get:
      tags: []
      summary: Build a string for a DOT graph.
      description: Build a string for a DOT graph.
      operationId: get_dot_graph
      parameters:
      - name: key
        in: path
        description: Workflow key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: Graph name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_dot_graph_response'
        '500':
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_error_response'
      security: []
components:
  schemas:
    jobs_model:
      description: Data model for a batch of jobs
      required:
      - jobs
      type: object
      properties:
        jobs:
          type: array
          description: Jobs in the batch
          items:
            $ref: '#/components/schemas/job_model'
    workflow_status_model:
      description: Data model for a workflow
      required:
      - auto_tune_status
      - is_canceled
      - run_id
      type: object
      properties:
        is_canceled:
          type: boolean
        run_id:
          type: integer
        auto_tune_status:
          $ref: '#/components/schemas/auto_tune_status'
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_specifications_schedulers:
      description: Data model for all schedulers in the workflow
      type: object
      properties:
        aws_schedulers:
          type: array
          items:
            $ref: '#/components/schemas/aws_scheduler_model'
        local_schedulers:
          type: array
          items:
            $ref: '#/components/schemas/local_scheduler_model'
        slurm_schedulers:
          type: array
          items:
            $ref: '#/components/schemas/slurm_scheduler_model'
    job_process_stats_model:
      description: Data model for stats collected by torc for each job process
      required:
      - avg_cpu_percent
      - avg_rss
      - job_key
      - max_cpu_percent
      - max_rss
      - num_samples
      - run_id
      - timestamp
      type: object
      properties:
        job_key:
          description: Database identifier for the job
          type: string
        run_id:
          type: integer
          description: Workflow run identifier
        avg_cpu_percent:
          type: number
          description: Average CPU utilization of the process
        max_cpu_percent:
          type: number
          description: Maximium CPU utilization of the process
        avg_rss:
          type: number
          description: Average memory consumption of the process
        max_rss:
          type: number
          description: Maximum memory consumption of the process
        num_samples:
          type: integer
          description: Number of samples taken by torc
        timestamp:
          type: string
          description: Time the stats were recorded in the database
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_config_model:
      type: object
      properties:
        compute_node_resource_stats:
          $ref: '#/components/schemas/compute_node_resource_stats_model'
        compute_node_expiration_buffer_seconds:
          type: integer
          description: Inform all compute nodes to shut down this number of seconds before the
            expiration time. This allows torc to send SIGTERM to all job processes and set all
            statuses to terminated. Increase the time in cases where the job processes handle
            SIGTERM and need more time to gracefully shut down. Set the value to 0 to maximize the
            time given to jobs. If not set, take the database's default value of 30 seconds.
        compute_node_wait_for_new_jobs_seconds:
          type: integer
          description: Inform all compute nodes to wait for new jobs for this time period before
            exiting. Does not apply if the workflow is complete.
        compute_node_ignore_workflow_completion:
          type: boolean
          default: false
          description: Inform all compute nodes to ignore workflow completions and hold onto
            allocations indefinitely. Useful for debugging failed jobs and possibly dynamic
            workflows where jobs get added after starting.
        compute_node_wait_for_healthy_database_minutes:
          type: integer
          description: Inform all compute nodes to wait this number of minutes if the database
            becomes unresponsive.
        prepare_jobs_sort_method:
          type: string
          enum:
          - gpus_runtime_memory
          - gpus_memory_runtime
          - none
          default: gpus_runtime_memory
          description: Inform all compute nodes to use this sort method when calling the
            prepare_jobs_for_submission command.
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    result_model:
      required:
      - completion_time
      - exec_time_minutes
      - job_key
      - return_code
      - run_id
      - status
      type: object
      properties:
        job_key:
          type: string
          description: Database key for the job tied to this result
        run_id:
          type: integer
          description: ID of the workflow run. Incremements on every start and restart.
        return_code:
          type: integer
          description: Code returned by the job. Zero is success; non-zero is a failure.
        exec_time_minutes:
          type: number
          description: Job execution time in minutes
        completion_time:
          type: string
          description: Timestamp of when the job completed.
        status:
          type: string
          description: Status of the job; managed by torc.
        _key:
          type: string
          description: Unique database identifier for the result. Does not include collection name.
        _id:
          type: string
          description: Unique database identifier for the result. Includes collection name and _key.
        _rev:
          type: string
          description: Database revision of the result
    aws_scheduler_model:
      type: object
      properties:
        name:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    default_error_response:
      required:
      - error
      type: object
      properties:
        error:
          type: object
        errorNum:
          type: integer
        errorMessage:
          type: string
        code:
          type: integer
    edge_model:
      required:
      - _from
      - _to
      type: object
      properties:
        _from:
          type: string
          description: Database ID of the 'from' document
        _to:
          type: string
          description: Database ID of the 'to' document
        data:
          type: object
          description: User-defined data
          properties: {}
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    scheduled_compute_nodes_model:
      required:
      - scheduler_config_id
      - status
      type: object
      properties:
        scheduler_id:
          type: string
        scheduler_config_id:
          type: string
        status:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    job_model:
      required:
      - command
      type: object
      properties:
        name:
          type: string
          description: Name of the job; no requirements on uniqueness
        command:
          type: string
          description: CLI command to execute. Will not be executed in a shell and so must not
            include shell characters.
        invocation_script:
          type: string
          description: Wrapper script for command in case the environment needs customization.
        status:
          type: string
          description: Status of job; managed by torc.
        needs_compute_node_schedule:
          type: boolean
          default: false
          description: Informs torc to schedule a compute node to start this job.
        cancel_on_blocking_job_failure:
          type: boolean
          default: true
          description: Cancel this job if any of its blocking jobs fails.
        supports_termination:
          type: boolean
          default: false
          description: Informs torc that the job can be terminated gracefully before a wall-time
            timeout.
        blocked_by:
          type: array
          items:
            type: string
          description: Database IDs of jobs that block this job
        input_files:
          type: array
          items:
            type: string
          description: Database IDs of files that this job needs
        output_files:
          type: array
          items:
            type: string
          description: Database IDs of files that this job produces
        input_user_data:
          type: array
          items:
            type: string
          description: Database IDs of user-data objects that this job needs
        output_user_data:
          type: array
          items:
            type: string
          description: Database IDs of user-data objects that this job produces
        resource_requirements:
          type: string
          description: Optional database ID of resources required by this job
        scheduler:
          type: string
          description: Optional database ID of scheduler needed by this job
        internal:
          $ref: '#/components/schemas/jobs_internal'
        _key:
          type: string
          description: Unique database identifier for the job. Does not include collection name.
        _id:
          type: string
          description: Unique database identifier for the job. Includes collection name and _key.
        _rev:
          type: string
          description: Database revision of the job
    slurm_scheduler_model:
      description: Data model for Slurm scheduler
      required:
      - account
      - nodes
      type: object
      properties:
        name:
          type: string
          description: Name of the scheduler
        account:
          type: string
          description: Slurm account ID
        gres:
          type: string
          description: Generic resource requirement
        mem:
          type: string
          description: Compute node memory requirement
        nodes:
          type: integer
          description: Number of nodes for the Slurm allocation
        ntasks_per_node:
          type: integer
          description: Number of tasks to invoke on each node
        partition:
          type: string
          description: Compute node partition; likely not necessary because Slurm should optimize it.
        qos:
          type: string
          default: normal
          description: Priority of Slurm job
        tmp:
          type: string
          description: Compute node local storage size requirement
        walltime:
          type: string
          description: Slurm runtime requirement, e.g., 04:00:00
        extra:
          type: string
          description: Extra Slurm parameters that torc will append to the sbatch command
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    auto_tune_status:
      type: object
      properties:
        enabled:
          type: boolean
          default: false
        job_keys:
          type: array
          items:
            type: string
    compute_nodes_resources:
      required:
      - memory_gb
      - num_cpus
      - num_gpus
      - num_nodes
      type: object
      properties:
        num_cpus:
          type: integer
        memory_gb:
          type: number
        num_gpus:
          type: integer
        num_nodes:
          type: integer
        time_limit:
          type: string
        scheduler_config_id:
          type: string
    compute_node_stats:
      required:
      - average
      - maximum
      - minimum
      - num_samples
      - resource_type
      type: object
      properties:
        resource_type:
          type: string
        average:
          type: object
          properties: {}
        minimum:
          type: object
          properties: {}
        maximum:
          type: object
          properties: {}
        num_samples:
          type: integer
        job_key:
          type: string
    local_scheduler_model:
      type: object
      properties:
        name:
          type: string
          default: default
        memory:
          type: string
        num_cpus:
          type: integer
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_model:
      type: object
      properties:
        name:
          type: string
          description: Name of the workflow
        user:
          type: string
          description: User that created the workflow
        description:
          type: string
          description: Description of the workflow
        timestamp:
          type: string
          description: Timestamp of workflow creation
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    compute_node_model:
      required:
      - hostname
      - pid
      - resources
      - start_time
      type: object
      properties:
        hostname:
          type: string
        pid:
          type: integer
        start_time:
          type: string
        duration_seconds:
          type: number
        is_active:
          type: boolean
        resources:
          $ref: '#/components/schemas/compute_nodes_resources'
        scheduler:
          type: object
          properties: {}
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    compute_node_stats_model:
      required:
      - hostname
      - timestamp
      type: object
      properties:
        hostname:
          type: string
        stats:
          type: array
          items:
            $ref: '#/components/schemas/compute_node_stats'
        timestamp:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    user_data_model:
      type: object
      properties:
        is_ephemeral:
          type: boolean
          default: false
          description: The data will only exist for the duration of one run. Torc will clear it
            before starting new runs.
        name:
          type: string
          description: Name of the data object
        data:
          type: object
          description: User-defined data
          properties: {}
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    resource_requirements_model:
      type: object
      properties:
        name:
          type: string
          description: Name of the resource requirements
        num_cpus:
          type: integer
          description: Number of CPUs required by a job
        num_gpus:
          type: integer
          description: Number of GPUs required by a job
        num_nodes:
          type: integer
          description: Number of nodes required by a job
        memory:
          type: string
          default: 1m
          description: Amount of memory required by a job, e.g., 20g
        runtime:
          type: string
          default: P0DT1M
          description: Maximum runtime for a job
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    file_model:
      description: Data model for files needed or produced by jobs. Can be data or code.
      required:
      - path
      type: object
      properties:
        name:
          type: string
          description: User-defined name of the file (not necessarily the filename)
        path:
          type: string
          description: Path to the file; can be relative to the execution directory.
        st_mtime:
          type: number
          description: Timestamp of when the file was last modified
        _key:
          type: string
          description: Unique database identifier for the file. Does not include collection name.
        _id:
          type: string
          description: Unique database identifier for the file. Includes collection name and _key.
        _rev:
          type: string
          description: Database revision of the file
    workflow_specification_model:
      type: object
      properties:
        name:
          type: string
          description: Name of the workflow
        key:
          type: string
          description: Optional key to use as the database identifier. If set, it must be unique in
            the database. It is recommended to let the database create the identifier.
        user:
          type: string
          description: User that created the workflow
        description:
          type: string
          description: Timestamp of workflow creation
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/job_specification_model'
          description: Jobs in the workflow. Each job name must be unique.
        files:
          type: array
          items:
            $ref: '#/components/schemas/file_model'
          description: Files in the workflow. Each file name must be unique.
        user_data:
          type: array
          items:
            $ref: '#/components/schemas/user_data_model'
          description: User data in the workflow. Each name must be unique.
        resource_requirements:
          type: array
          items:
            $ref: '#/components/schemas/resource_requirements_model'
          description: Resource requirements in the workflow. Each name must be unique.
        schedulers:
          $ref: '#/components/schemas/workflow_specifications_schedulers'
          description: Schedulers in the workflow. Each name must be unique.
        config:
          $ref: '#/components/schemas/workflow_config_model'
          description: Workflow configuration
    job_specification_model:
      required:
      - command
      type: object
      properties:
        name:
          type: string
          description: Name of the job; must be unique within the workflow specification.
        key:
          type: string
          description: Optional database identifier for the job. If set, must be unique. It is
            recommended to let the database create the identifier.
        command:
          type: string
          description: CLI command to execute. Will not be executed in a shell and so must not
            include shell characters.
        invocation_script:
          type: string
          description: Wrapper script for command in case the environment needs customization.
        cancel_on_blocking_job_failure:
          type: boolean
          default: true
          description: Cancel this job if any of its blocking jobs fails.
        supports_termination:
          type: boolean
          default: false
          description: Informs torc that the job can be terminated gracefully before a wall-time
            timeout.
        scheduler:
          type: string
          description: Optional name of scheduler needed by this job
        needs_compute_node_schedule:
          type: boolean
          default: false
          description: Informs torc to schedule a compute node to start this job.
        input_user_data:
          type: array
          items:
            type: string
          description: Names of user-data objects that this job needs
        output_user_data:
          type: array
          items:
            type: string
          description: Names of user-data objects that this job produces
        resource_requirements:
          type: string
          description: Optional name of resources required by this job
        input_files:
          type: array
          items:
            type: string
          description: Names of files that this job needs
        output_files:
          type: array
          items:
            type: string
          description: Names of files that this job produces
        blocked_by:
          type: array
          items:
            type: string
          description: Names of jobs that block this job
    jobs_internal:
      type: object
      properties:
        memory_bytes:
          type: integer
        num_cpus:
          type: integer
        num_gpus:
          type: integer
        num_nodes:
          type: integer
        runtime_seconds:
          type: number
        scheduler_config_id:
          type: string
        hash:
          type: integer
    compute_node_resource_stats_model:
      type: object
      properties:
        cpu:
          type: boolean
          default: true
        disk:
          type: boolean
          default: false
        memory:
          type: boolean
          default: true
        network:
          type: boolean
          default: false
        process:
          type: boolean
          default: false
        include_child_processes:
          type: boolean
          default: true
        recurse_child_processes:
          type: boolean
          default: false
        monitor_type:
          type: string
          default: aggregation
        make_plots:
          type: boolean
          default: true
        interval:
          type: number
    list_aws_schedulers_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/aws_scheduler_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    add_jobs_response:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/job_model'
    list_compute_nodes_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/compute_node_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    list_compute_node_stats_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/compute_node_stats_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    list_events_response: &id004
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties: {}
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    list_files_response: &id001
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/file_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    list_jobs_response: &id002
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/job_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    list_job_process_stats_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/job_process_stats_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    list_local_schedulers_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/local_scheduler_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    list_resource_requirements_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/resource_requirements_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    list_results_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/result_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    list_scheduled_compute_nodes_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/scheduled_compute_nodes_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    list_slurm_schedulers_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/slurm_scheduler_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    list_user_data_response: &id003
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/user_data_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    list_edges_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/edge_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    list_files_produced_by_job: *id001
    list_job_specifications_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/job_specification_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    list_jobs_by_status_response: *id002
    list_jobs_by_needs_file_response: *id002
    list_job_user_data_stores_response: *id003
    list_job_user_data_consumes_response: *id003
    list_workflows_response:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/workflow_model'
        skip:
          type: integer
        max_limit:
          type: integer
        count:
          type: integer
        total_count:
          type: integer
        has_more:
          type: boolean
    is_complete_response:
      required:
      - is_canceled
      - is_complete
      type: object
      properties:
        is_canceled:
          type: boolean
        is_complete:
          type: boolean
    get_ready_job_requirements_response:
      required:
      - max_memory_gb
      - max_num_nodes
      - max_runtime
      - memory_gb
      - num_cpus
      - num_gpus
      - num_jobs
      type: object
      properties:
        num_jobs:
          type: integer
        num_cpus:
          type: integer
        num_gpus:
          type: integer
        memory_gb:
          type: number
        max_memory_gb:
          type: number
        max_num_nodes:
          type: integer
        max_runtime:
          type: string
    process_changed_job_inputs_response:
      type: object
      properties:
        reinitialized_jobs:
          type: array
          items:
            type: string
    list_missing_user_data_response:
      type: object
      properties:
        user_data:
          type: array
          items:
            type: string
    list_required_existing_files_response:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
    prepare_jobs_for_submission_response:
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/job_model'
        reason:
          type: string
    prepare_next_jobs_for_submission_response:
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/job_model'
    prepare_jobs_for_scheduling_response:
      type: object
      properties:
        schedulers:
          type: array
          items:
            type: string
    list_collection_names_response:
      type: object
      properties:
        names:
          type: array
          items:
            type: string
    join_by_inbound_edge_collection_edge_response: *id004
    join_by_outbound_edge_collection_edge_response: *id004
    get_dot_graph_response:
      required:
      - graph
      type: object
      properties:
        graph:
          type: string
x-original-swagger-version: '2.0'
