openapi: 3.0.1
info:
  description: ""
  license: {}
servers:
- url: /_db/workflows/wms-service
paths:
  /events:
    get:
      tags: []
      summary: Retrieve all events
      description: Retrieves all events from the "events" collection.
      operationId: get_events
      parameters:
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1000.0
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store an event.
      description: Store an event in the "events" collection.
      operationId: post_events
      requestBody:
        description: event.
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          description: event
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all events
      description: Deletes all events from the "events" collection.
      operationId: delete_events
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: message
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /events/{key}:
    get:
      tags: []
      summary: Retrieve the event for a key.
      description: Retrieve the event for a key.
      operationId: get_events_key
      parameters:
      - name: key
        in: path
        description: Key of the events object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    delete:
      tags: []
      summary: Delete an event
      description: Deletes an event from the "events" collection by key.
      operationId: delete_events_key
      parameters:
      - name: key
        in: path
        description: Key of the event.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: Event stored in the collection.
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflow:
    get:
      tags: []
      summary: Retrieve the current workflow
      description: Retrieves the current workflow in JSON format.
      operationId: get_workflow
      responses:
        "200":
          description: Stored workflow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a workflow.
      description: "Store a workflow, overwriting any existing entries."
      operationId: post_workflow
      requestBody:
        description: New workflow
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow'
        required: true
      responses:
        "200":
          description: message
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete the workflow.
      description: Delete all workflow objects from the database.
      operationId: delete_workflow
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: message
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflow/is_complete:
    get:
      tags: []
      summary: Report whether the workflow is complete
      description: Reports true if all jobs in the workflow are complete.
      operationId: get_workflow_is_complete
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflow/ready_job_requirements:
    get:
      tags: []
      summary: Return the resource requirements for ready jobs.
      description: Return the resource requirements for jobs with a status of ready.
      operationId: get_workflow_ready_job_requirements
      responses:
        "200":
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /workflow/estimate:
    post:
      tags: []
      summary: Perform a dry run of all jobs to estimate required resources.
      description: |-
        Perform a dry run of all jobs to estimate required resources.
              Only valid if jobs have similar runtimes
      operationId: post_workflow_estimate
      requestBody:
        content:
          '*/*': {}
        required: false
      responses:
        "200":
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflow/initialize_jobs:
    post:
      tags: []
      summary: Initialize job relationships.
      description: Initialize job relationships based on file relationships.
      operationId: post_workflow_initialize_jobs
      requestBody:
        content:
          '*/*': {}
        required: false
      responses:
        "200":
          description: message
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflow/prepare_jobs_for_submission:
    post:
      tags: []
      summary: Return ready jobs
      description: Return jobs that are ready for submission. Sets status to submitted_pending
      operationId: post_workflow_prepare_jobs_for_submission
      parameters:
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1000.0
      requestBody:
        description: Available worker resources.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/worker_resources'
        required: true
      responses:
        "200":
          description: Jobs that are ready for submission.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_5'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflow/auto_tune_resource_requirements:
    post:
      tags: []
      summary: Enable workflow for auto-tuning resource requirements.
      description: Enable workflow for auto-tuning resource requirements.
      operationId: post_workflow_auto_tune_resource_requirements
      requestBody:
        content:
          '*/*': {}
        required: false
      responses:
        "200":
          description: Message
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflow/process_auto_tune_resource_requirements_results:
    post:
      tags: []
      summary: Process the results of auto-tuning resource requirements.
      description: Process the results of auto-tuning resource requirements.
      operationId: post_workflow_process_auto_tune_resource_requirements_results
      requestBody:
        content:
          '*/*': {}
        required: false
      responses:
        "200":
          description: Message
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflow/reset_status:
    post:
      tags: []
      summary: Reset job status.
      description: Reset status for all jobs to uninitialized.
      operationId: post_workflow_reset_status
      requestBody:
        content:
          '*/*': {}
        required: false
      responses:
        "200":
          description: message
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflow/example:
    get:
      tags: []
      summary: Retrieve an example workflow
      description: Retrieves an example workflow in JSON format.
      operationId: get_workflow_example
      responses:
        "200":
          description: Example workflow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /compute_nodes:
    get:
      tags: []
      summary: Retrieve all compute nodes
      description: Retrieves all compute nodes from the "compute_nodes" collection.
      operationId: get_compute_nodes
      parameters:
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1000.0
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store information about a compute node.
      description: Store information about a compute node in the "compute_nodes" collection.
      operationId: post_compute_nodes
      requestBody:
        description: compute node.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compute_nodes_model'
        required: true
      responses:
        "200":
          description: compute node
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all compute nodes
      description: Deletes all compute nodes from the "compute_nodes" collection.
      operationId: delete_compute_nodes
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: message
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /compute_nodes/{key}:
    get:
      tags: []
      summary: Retrieve the compute node for a key.
      description: Retrieve the compute node for a key.
      operationId: get_compute_nodes_key
      parameters:
      - name: key
        in: path
        description: Key of the compute node object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update compute node
      description: Update a compute node in the "compute_nodes" collection.
      operationId: put_compute_nodes_key
      parameters:
      - name: key
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Compute node to update in the collection.
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          description: Compute node updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a compute node
      description: Deletes a compute node from the "compute_nodes" collection by key.
      operationId: delete_compute_nodes_key
      parameters:
      - name: key
        in: path
        description: Key of the compute node.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: Compute node stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /compute_node_stats:
    get:
      tags: []
      summary: Retrieve all compute nodes
      description: Retrieves all compute nodes from the "compute_node_stats" collection.
      operationId: get_compute_node_stats
      parameters:
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1000.0
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store utilization stats for a compute node.
      description: Store utilization stats for a compute node.
      operationId: post_compute_node_stats
      requestBody:
        description: compute node stats
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compute_node_stats_model'
        required: true
      responses:
        "200":
          description: compute node stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all compute node stats
      description: Deletes all compute node stats from the "compute_node_stats" collection.
      operationId: delete_compute_node_stats
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: message
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /compute_node_stats/{key}:
    get:
      tags: []
      summary: Retrieve the compute node for a key.
      description: Retrieve the compute node for a key.
      operationId: get_compute_node_stats_key
      parameters:
      - name: key
        in: path
        description: Key of the compute node object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    delete:
      tags: []
      summary: Delete a compute node
      description: Deletes a compute node from the "compute_node_stats" collection
        by key.
      operationId: delete_compute_node_stats_key
      parameters:
      - name: key
        in: path
        description: Key of the compute node.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: Compute node stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /files:
    get:
      tags: []
      summary: Retrieve all files
      description: Retrieves all files from the "files" collection.
      operationId: get_files
      parameters:
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1000.0
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store file
      description: Store a file in the "files" collection.
      operationId: post_files
      requestBody:
        description: file to store in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/file_model'
        required: true
      responses:
        "200":
          description: file stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all files
      description: Deletes all files from the "files" collection.
      operationId: delete_files
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: message
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /files/{name}:
    get:
      tags: []
      summary: Retrieve a file
      description: Retrieves a file from the "files" collection by name.
      operationId: get_files_name
      parameters:
      - name: name
        in: path
        description: Name of the file.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: file stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update file
      description: Update a file in the "files" collection.
      operationId: put_files_name
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: file to update in the collection.
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          description: file updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a file
      description: Deletes a file from the "files" collection by name.
      operationId: delete_files_name
      parameters:
      - name: name
        in: path
        description: Name of the file.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: file stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /files/produced_by_job/{name}:
    get:
      tags: []
      summary: Retrieve files produced by a job
      description: Retrieves files from the "files" collection produced by a job.
      operationId: get_files_produced_by_job_name
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1000.0
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /hpc_configs:
    get:
      tags: []
      summary: Retrieve all hpc_configs
      description: Retrieves all hpc_configs from the "hpc_configs" collection.
      operationId: get_hpc_configs
      parameters:
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1000.0
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store an hpc_config.
      description: Store an hpc_config in the "hpc_configs" collection.
      operationId: post_hpc_configs
      requestBody:
        description: hpc_config to store in the collection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/hpc_config_model'
        required: true
      responses:
        "200":
          description: hpc_config stored in the collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hpc_config_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all hpc_configs
      description: Deletes all hpc_configs from the "hpc_configs" collection.
      operationId: delete_hpc_configs
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: message
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /hpc_configs/{name}:
    get:
      tags: []
      summary: Retrieve an hpc_config document by name
      description: Retrieves an hpc_config document from the "hpc_configs" collection.
      operationId: get_hpc_configs_name
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hpc_config_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    delete:
      tags: []
      summary: Delete a hpc_config
      description: Deletes a hpc_config from the "hpc_configs" collection by name.
      operationId: delete_hpc_configs_name
      parameters:
      - name: name
        in: path
        description: Name of the hpc_config.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: hpc_config stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hpc_config_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /job_definitions:
    get:
      tags: []
      summary: Retrieve all job definitions
      description: Retrieves all job definitions. Limit output with skip and limit.
      operationId: get_job_definitions
      parameters:
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1000.0
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a job and create edges.
      description: Store a job in the "jobs" collection and create edges.
      operationId: post_job_definitions
      requestBody:
        description: job definition to store in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/job_definition'
        required: true
      responses:
        "200":
          description: job stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /job_definitions/{name}:
    get:
      tags: []
      summary: Retrieve a job
      description: Retrieves a job from the "jobs" collection by name.
      operationId: get_job_definitions_name
      parameters:
      - name: name
        in: path
        description: Name of the job.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Job stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /job_process_stats:
    get:
      tags: []
      summary: Retrieve all job processs
      description: Retrieves all job processs from the "job_process_stats" collection.
      operationId: get_job_process_stats
      parameters:
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1000.0
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store utilization stats for a job process.
      description: Store utilization stats for a job process.
      operationId: post_job_process_stats
      requestBody:
        description: job process stats
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/job_process_stats_model'
        required: true
      responses:
        "200":
          description: job process stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_process_stats_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all job process stats
      description: Deletes all job process stats from the "job_process_stats" collection.
      operationId: delete_job_process_stats
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: message
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /job_process_stats/{key}:
    get:
      tags: []
      summary: Retrieve the job process for a key.
      description: Retrieve the job process for a key.
      operationId: get_job_process_stats_key
      parameters:
      - name: key
        in: path
        description: Key of the job process object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_process_stats_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    delete:
      tags: []
      summary: Delete a job process
      description: Deletes a job process from the "job_process_stats" collection by
        key.
      operationId: delete_job_process_stats_key
      parameters:
      - name: key
        in: path
        description: Key of the job process.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: job process stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_process_stats_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /jobs:
    get:
      tags: []
      summary: Retrieve all jobs
      description: Retrieve all jobs. Limit output with skip and limit.
      operationId: get_jobs
      parameters:
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1000.0
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store job
      description: Store a job in the "jobs" collection.
      operationId: post_jobs
      requestBody:
        description: job to store in the collection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/job_model'
        required: true
      responses:
        "200":
          description: job stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all jobs
      description: Deletes all jobs from the "jobs" collection.
      operationId: delete_jobs
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: message
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /jobs/{name}:
    get:
      tags: []
      summary: Retrieve a job
      description: Retrieves a job from the "jobs" collection by name.
      operationId: get_jobs_name
      parameters:
      - name: name
        in: path
        description: Name of the job.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Job stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update job
      description: Update a job in the "jobs" collection.
      operationId: put_jobs_name
      parameters:
      - name: name
        in: path
        description: Name of the job.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: job to update in the collection.
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          description: job updated in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete a job
      description: Deletes a job from the "jobs" collection by name.
      operationId: delete_jobs_name
      parameters:
      - name: name
        in: path
        description: Name of the job.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: Job stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /jobs/find_by_status/{status}:
    get:
      tags: []
      summary: Retrieve all jobs with a specific status
      description: Retrieves all jobs from the "jobs" collection with a specific status.
      operationId: get_jobs_find_by_status_status
      parameters:
      - name: status
        in: path
        description: Job status.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1000.0
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /jobs/find_by_needs_file/{name}:
    get:
      tags: []
      summary: Retrieve all jobs that need a file
      description: Retrieves all jobs connected to a file by the needs edge.
      operationId: get_jobs_find_by_needs_file_name
      parameters:
      - name: name
        in: path
        description: File name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1000.0
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /jobs/resource_requirements/{name}:
    get:
      tags: []
      summary: Retrieve the resource requirements for a job.
      description: Retrieve the resource requirements for a job by its name.
      operationId: get_jobs_resource_requirements_name
      parameters:
      - name: name
        in: path
        description: Name of the job.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Resource requirements for the job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_resource_requirements'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /jobs/process_stats/{name}:
    get:
      tags: []
      summary: Retrieve the job process stats for a job.
      description: Retrieve the job process stats for a job by its name.
      operationId: get_jobs_process_stats_name
      parameters:
      - name: name
        in: path
        description: Name of the job.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Process stats for the job.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/job_process_stats_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /jobs/complete_job/{name}/{status}/{rev}:
    post:
      tags: []
      summary: Complete a job and add a result.
      description: "Complete a job, connect it to a result, and manage side effects."
      operationId: post_jobs_complete_job_name_status_rev
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: status
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: rev
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Result of the job.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/status_rev_body'
        required: true
      responses:
        "200":
          description: job completed in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /jobs/manage_status_change/{name}/{status}/{rev}:
    put:
      tags: []
      summary: Change the status of a job and manage side effects.
      description: Change the status of a job and manage side effects.
      operationId: put_jobs_manage_status_change_name_status_rev
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: status
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: rev
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*': {}
        required: false
      responses:
        "200":
          description: Updated job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /jobs/store_user_data/{name}:
    post:
      tags: []
      summary: Store user data for a job.
      description: Store user data for a job and connect the two vertexes.
      operationId: post_jobs_store_user_data_name
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: User data for the job.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store_user_data_name_body'
        required: true
      responses:
        "200":
          description: Database information for the user data.
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /jobs/get_user_data/{name}:
    get:
      tags: []
      summary: Retrieve all user data for a job.
      description: Retrieve all user data for a job.
      operationId: get_jobs_get_user_data_name
      parameters:
      - name: name
        in: path
        description: Job name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: All user data stored for the job.
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /job_names:
    get:
      tags: []
      summary: Retrieve all job names
      description: Retrieves all job names from the "jobs" collection.
      operationId: get_job_names
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /resource_requirements:
    get:
      tags: []
      summary: Retrieve all resource requirements
      description: Retrieves all requirement from the "resource_requirements" collection.
      operationId: get_resource_requirements
      parameters:
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1000.0
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a resource.
      description: Store a resource in the "resource_requirements" collection.
      operationId: post_resource_requirements
      requestBody:
        description: resource to store in the collection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resource_requirements_model'
        required: true
      responses:
        "200":
          description: resource stored in the collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resource_requirements_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all resource_requirements
      description: Deletes all documents from the "resource_requirements" collection.
      operationId: delete_resource_requirements
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: message
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /resource_requirements/{name}:
    get:
      tags: []
      summary: Retrieve a resource requirements document by name
      description: Retrieve a resource requirements document by name.
      operationId: get_resource_requirements_name
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resource_requirements_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    delete:
      tags: []
      summary: Delete a resource
      description: Deletes a resource from the "resource_requirements" collection
        by name.
      operationId: delete_resource_requirements_name
      parameters:
      - name: name
        in: path
        description: Name of the resource.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: resource stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resource_requirements_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /results:
    get:
      tags: []
      summary: Retrieve all results
      description: Retrieves all results from the "results" collection.
      operationId: get_results
      parameters:
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1000.0
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store a job result.
      description: Store a job result in the "results" collection.
      operationId: post_results
      requestBody:
        description: Job result.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/result_model'
        required: true
      responses:
        "200":
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all results
      description: Deletes all results from the "results" collection.
      operationId: delete_results
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: message
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /results/{key}:
    get:
      tags: []
      summary: Retrieve the result for a key.
      description: Retrieve the result for a key.
      operationId: get_results_key
      parameters:
      - name: key
        in: path
        description: Key of the results object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    delete:
      tags: []
      summary: Delete a result
      description: Deletes a result from the "results" collection by key.
      operationId: delete_results_key
      parameters:
      - name: key
        in: path
        description: Key of the result object.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: Result stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /results/find_by_job_name/{name}:
    get:
      tags: []
      summary: Retrieve the latest result for a job
      description: Retrieve the latest result for a job. Throws an error if no result
        is stored.
      operationId: get_results_find_by_job_name_name
      parameters:
      - name: name
        in: path
        description: Job name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
  /user_data:
    get:
      tags: []
      summary: Retrieve all user data objects
      description: Retrieves all user data from the "user_data" collection.
      operationId: get_user_data
      parameters:
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1000.0
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store user data for a job.
      description: Store user data in the "user_data" collection.
      operationId: post_user_data
      requestBody:
        description: User data.
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: User data
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all user data
      description: Deletes all user data from the "user_data" collection.
      operationId: delete_user_data
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: message
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /user_data/{key}:
    get:
      tags: []
      summary: Retrieve the user data object for a key.
      description: Retrieve the user data object for a key.
      operationId: get_user_data_key
      parameters:
      - name: key
        in: path
        description: Key of the user_data object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    delete:
      tags: []
      summary: Delete a user data object
      description: Deletes a user data object from the "user_data" collection by key.
      operationId: delete_user_data_key
      parameters:
      - name: key
        in: path
        description: Key of the user data object.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: User data stored in the collection.
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflow_config:
    get:
      tags: []
      summary: Retrieve the current workflow config.
      description: Retrieve the current workflow config.
      operationId: get_workflow_config
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update workflow config
      description: Update workflow config in the "workflow_config" collection.
      operationId: put_workflow_config
      requestBody:
        description: Updated workflow config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_config_model'
        required: true
      responses:
        "200":
          description: Updated workflow config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    post:
      tags: []
      summary: Set workflow config
      description: Set workflow config in the "workflow_config" collection.
      operationId: post_workflow_config
      requestBody:
        description: Workflow config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_config_model_1'
        required: true
      responses:
        "200":
          description: Workflow config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflow_config/reset:
    put:
      tags: []
      summary: Reset workflow config
      description: Rest workflow config in the "workflow_config" collection.
      operationId: put_workflow_config_reset
      requestBody:
        content:
          '*/*': {}
        required: false
      responses:
        "200":
          description: Updated workflow config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflow_status:
    get:
      tags: []
      summary: Retrieve the current workflow status.
      description: Retrieve the current workflow status.
      operationId: get_workflow_status
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    put:
      tags: []
      summary: Update workflow status
      description: Update workflow status in the "workflow_status" collection.
      operationId: put_workflow_status
      requestBody:
        description: Updated workflow status
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          description: Updated workflow status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /workflow_status/reset:
    put:
      tags: []
      summary: Reset workflow status
      description: Rest workflow status in the "workflow_status" collection.
      operationId: put_workflow_status_reset
      requestBody:
        content:
          '*/*': {}
        required: false
      responses:
        "200":
          description: Updated workflow status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /edges/{name}:
    get:
      tags: []
      summary: Retrieve all edges from the designated collection.
      description: Retrieve all edges from the designated collection.
      operationId: get_edges_name
      parameters:
      - name: name
        in: path
        description: Edge collection name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 0.0
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 1000.0
      responses:
        "200":
          description: HTTP 200 OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    post:
      tags: []
      summary: Store an edge between two vertexes.
      description: Store an edge between two vertexes in the designated collection.
      operationId: post_edges_name
      parameters:
      - name: name
        in: path
        description: Edge name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Relationship between two vertexes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/edge_model'
        required: true
      responses:
        "200":
          description: Edge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edge_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
    delete:
      tags: []
      summary: Delete all edges from the designated collection
      description: Deletes all edges from the designated collection.
      operationId: delete_edges_name
      parameters:
      - name: name
        in: path
        description: Edge collection name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: message
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
  /edges/{name}/{key}:
    get:
      tags: []
      summary: Retrieve an edge
      description: Retrieves an edge from the designated collection by key.
      operationId: get_edges_name_key
      parameters:
      - name: name
        in: path
        description: Edge collection name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Edge key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Edge stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edge_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
    delete:
      tags: []
      summary: Delete an edge
      description: Deletes an edge from the designated collection by key.
      operationId: delete_edges_name_key
      parameters:
      - name: name
        in: path
        description: Edge collection name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        description: Edge key.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: Edge stored in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edge_model'
        "500":
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      security: []
      x-codegen-request-body-name: body
components:
  schemas:
    workflowprepare_jobs_for_submission_internal:
      type: object
      properties:
        memory_bytes:
          type: number
        num_cpus:
          type: number
        num_gpus:
          type: number
        runtime_seconds:
          type: number
    compute_node_stats_model:
      required:
      - hostname
      - name
      - timestamp
      type: object
      properties:
        name:
          type: string
        hostname:
          type: string
        stats:
          type: array
          items:
            $ref: '#/components/schemas/compute_node_stats_stats'
        timestamp:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    inline_response_200_11:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/hpc_config_model'
        skip:
          type: number
        max_limit:
          type: number
        count:
          type: number
        total_count:
          type: number
        has_more:
          type: boolean
    inline_response_200_10:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/file_model'
        skip:
          type: number
        max_limit:
          type: number
        count:
          type: number
        total_count:
          type: number
        has_more:
          type: boolean
    inline_response_200_13:
      required:
      - command
      - name
      type: object
      properties:
        name:
          type: string
        command:
          type: string
        status:
          type: string
        cancel_on_blocking_job_failure:
          type: boolean
          default: true
        interruptible:
          type: boolean
          default: false
        run_id:
          type: number
        internal:
          $ref: '#/components/schemas/workflowprepare_jobs_for_submission_internal'
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_config_compute_node_resource_stat_config:
      type: object
      properties:
        cpu:
          type: boolean
          default: true
        disk:
          type: boolean
          default: false
        memory:
          type: boolean
          default: true
        network:
          type: boolean
          default: false
        process:
          type: boolean
          default: true
        include_child_processes:
          type: boolean
          default: true
        recurse_child_processes:
          type: boolean
          default: false
        interval:
          type: number
    inline_response_200_12:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/job_definition'
        skip:
          type: number
        max_limit:
          type: number
        count:
          type: number
        total_count:
          type: number
        has_more:
          type: boolean
    workflow_schedulers:
      required:
      - account
      - hpc_type
      - name
      type: object
      properties:
        name:
          type: string
        hpc_type:
          type: string
        account:
          type: string
        partition:
          type: string
        qos:
          type: string
          default: normal
        walltime:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow_config_model_1:
      required:
      - compute_node_resource_stat_config
      type: object
      properties:
        compute_node_resource_stat_config:
          $ref: '#/components/schemas/workflow_config_compute_node_resource_stat_config'
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    inline_response_200_19:
      required:
      - auto_tune_status
      - is_canceled
      - run_id
      type: object
      properties:
        is_canceled:
          type: boolean
        run_id:
          type: number
        scheduled_compute_node_ids:
          type: array
          items:
            type: number
        auto_tune_status:
          $ref: '#/components/schemas/inline_response_200_19_auto_tune_status'
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    inline_response_200_18:
      required:
      - compute_node_resource_stat_config
      type: object
      properties:
        compute_node_resource_stat_config:
          $ref: '#/components/schemas/workflow_config_compute_node_resource_stat_config'
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    store_user_data_name_body:
      required:
      - completion_time
      - exec_time_minutes
      - name
      - return_code
      - run_id
      - status
      type: object
      properties:
        name:
          type: string
        run_id:
          type: number
        return_code:
          type: number
        exec_time_minutes:
          type: number
        completion_time:
          type: string
        status:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    inline_response_200_15:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/job_model'
        skip:
          type: number
        max_limit:
          type: number
        count:
          type: number
        total_count:
          type: number
        has_more:
          type: boolean
    inline_response_200_14:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/job_process_stats_model'
        skip:
          type: number
        max_limit:
          type: number
        count:
          type: number
        total_count:
          type: number
        has_more:
          type: boolean
    inline_response_200_17:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/result_model'
        skip:
          type: number
        max_limit:
          type: number
        count:
          type: number
        total_count:
          type: number
        has_more:
          type: boolean
    inline_response_200_16:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/resource_requirements_model'
        skip:
          type: number
        max_limit:
          type: number
        count:
          type: number
        total_count:
          type: number
        has_more:
          type: boolean
    job_process_stats_model:
      required:
      - avg_cpu_percent
      - avg_rss
      - job_name
      - max_cpu_percent
      - max_rss
      - num_samples
      - run_id
      - timestamp
      type: object
      properties:
        job_name:
          type: string
        run_id:
          type: number
        avg_cpu_percent:
          type: number
        max_cpu_percent:
          type: number
        avg_rss:
          type: number
        max_rss:
          type: number
        num_samples:
          type: number
        timestamp:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    compute_node_stats_stats:
      required:
      - average
      - maximum
      - minimum
      - num_samples
      - resourceType
      type: object
      properties:
        resourceType:
          type: string
        average:
          type: object
          properties: {}
        minimum:
          type: object
          properties: {}
        maximum:
          type: object
          properties: {}
        num_samples:
          type: number
        job_name:
          type: string
    status_rev_body:
      required:
      - completion_time
      - exec_time_minutes
      - name
      - return_code
      - run_id
      - status
      type: object
      properties:
        name:
          type: string
        run_id:
          type: number
        return_code:
          type: number
        exec_time_minutes:
          type: number
        completion_time:
          type: string
        status:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    inline_response_200_19_auto_tune_status:
      type: object
      properties:
        enabled:
          type: boolean
          default: true
        job_names:
          type: array
          items:
            type: string
    inline_response_200:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties: {}
        skip:
          type: number
        max_limit:
          type: number
        count:
          type: number
        total_count:
          type: number
        has_more:
          type: boolean
    workflow_resource_requirements:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        num_cpus:
          type: number
        num_gpus:
          type: number
        num_nodes:
          type: number
        memory:
          type: string
          default: 1m
        runtime:
          type: string
          default: P0DT1H
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    result_model:
      required:
      - completion_time
      - exec_time_minutes
      - name
      - return_code
      - run_id
      - status
      type: object
      properties:
        name:
          type: string
        run_id:
          type: number
        return_code:
          type: number
        exec_time_minutes:
          type: number
        completion_time:
          type: string
        status:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    job_definition2:
      required:
      - command
      - name
      type: object
      properties:
        name:
          type: string
        command:
          type: string
        user_data:
          type: array
          items:
            type: object
            properties: {}
        cancel_on_blocking_job_failure:
          type: boolean
          default: true
        interruptible:
          type: boolean
          default: false
        scheduler:
          type: string
        resource_requirements:
          type: string
        input_files:
          type: array
          items:
            type: string
        output_files:
          type: array
          items:
            type: string
        blocked_by:
          type: array
          items:
            type: string
    job_definition:
      required:
      - command
      - name
      type: object
      properties:
        name:
          type: string
        command:
          type: string
        user_data:
          type: array
          items:
            type: object
            properties: {}
        cancel_on_blocking_job_failure:
          type: boolean
          default: true
        interruptible:
          type: boolean
          default: false
        scheduler:
          type: string
        resource_requirements:
          type: string
        input_files:
          type: array
          items:
            type: string
        output_files:
          type: array
          items:
            type: string
        blocked_by:
          type: array
          items:
            type: string
    inline_response_500:
      required:
      - error
      type: object
      properties:
        error:
          type: object
        errorNum:
          type: integer
        errorMessage:
          type: string
        code:
          type: integer
    inline_response_200_9:
      required:
      - hostname
      - name
      - timestamp
      type: object
      properties:
        name:
          type: string
        hostname:
          type: string
        stats:
          type: array
          items:
            $ref: '#/components/schemas/compute_node_stats_stats'
        timestamp:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    hpc_config_model:
      required:
      - account
      - hpc_type
      - name
      type: object
      properties:
        name:
          type: string
        hpc_type:
          type: string
        account:
          type: string
        partition:
          type: string
        qos:
          type: string
          default: normal
        walltime:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    inline_response_200_5:
      required:
      - command
      - name
      type: object
      properties:
        name:
          type: string
        command:
          type: string
        status:
          type: string
        cancel_on_blocking_job_failure:
          type: boolean
          default: true
        interruptible:
          type: boolean
          default: false
        run_id:
          type: number
        internal:
          $ref: '#/components/schemas/workflowprepare_jobs_for_submission_internal'
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    inline_response_200_6:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/compute_nodes_model'
        skip:
          type: number
        max_limit:
          type: number
        count:
          type: number
        total_count:
          type: number
        has_more:
          type: boolean
    file_model:
      required:
      - name
      - path
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        file_hash:
          type: string
        st_mtime:
          type: number
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    inline_response_200_7:
      required:
      - hostname
      - resources
      - start_time
      type: object
      properties:
        hostname:
          type: string
        start_time:
          type: string
        is_active:
          type: boolean
        resources:
          $ref: '#/components/schemas/worker_resources'
        scheduler:
          type: object
          properties: {}
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    inline_response_200_20:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/edge_model'
        skip:
          type: number
        max_limit:
          type: number
        count:
          type: number
        total_count:
          type: number
        has_more:
          type: boolean
    inline_response_200_8:
      required:
      - count
      - has_more
      - max_limit
      - skip
      - total_count
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/compute_node_stats_model'
        skip:
          type: number
        max_limit:
          type: number
        count:
          type: number
        total_count:
          type: number
        has_more:
          type: boolean
    worker_resources:
      required:
      - memory_gb
      - num_cpus
      type: object
      properties:
        num_cpus:
          type: number
        memory_gb:
          type: number
        num_gpus:
          type: number
        num_nodes:
          type: number
        time_limit:
          type: object
    job_model:
      required:
      - command
      - name
      type: object
      properties:
        name:
          type: string
        command:
          type: string
        status:
          type: string
        cancel_on_blocking_job_failure:
          type: boolean
          default: true
        interruptible:
          type: boolean
          default: false
        run_id:
          type: number
        internal:
          $ref: '#/components/schemas/workflowprepare_jobs_for_submission_internal'
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    workflow:
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/job_definition2'
        files:
          type: array
          items:
            $ref: '#/components/schemas/workflow_files'
        resource_requirements:
          type: array
          items:
            $ref: '#/components/schemas/workflow_resource_requirements'
        schedulers:
          type: array
          items:
            $ref: '#/components/schemas/workflow_schedulers'
    edge_model:
      required:
      - _from
      - _to
      type: object
      properties:
        _from:
          type: string
        _to:
          type: string
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    compute_nodes_model:
      required:
      - hostname
      - resources
      - start_time
      type: object
      properties:
        hostname:
          type: string
        start_time:
          type: string
        is_active:
          type: boolean
        resources:
          $ref: '#/components/schemas/worker_resources'
        scheduler:
          type: object
          properties: {}
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    resource_requirements_model:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        num_cpus:
          type: number
        num_gpus:
          type: number
        num_nodes:
          type: number
        memory:
          type: string
          default: 1m
        runtime:
          type: string
          default: P0DT1H
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    inline_response_200_1:
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/job_definition'
        files:
          type: array
          items:
            $ref: '#/components/schemas/file_model'
        resource_requirements:
          type: array
          items:
            $ref: '#/components/schemas/resource_requirements_model'
        schedulers:
          type: array
          items:
            $ref: '#/components/schemas/hpc_config_model'
    workflow_files:
      required:
      - name
      - path
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        file_hash:
          type: string
        st_mtime:
          type: number
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
    inline_response_200_2:
      required:
      - is_complete
      type: object
      properties:
        is_complete:
          type: boolean
    inline_response_200_3:
      required:
      - max_memory_gb
      - max_num_nodes
      - max_runtime
      - memory_gb
      - num_cpus
      - num_gpus
      - num_jobs
      type: object
      properties:
        num_jobs:
          type: number
        num_cpus:
          type: number
        num_gpus:
          type: number
        memory_gb:
          type: number
        max_memory_gb:
          type: number
        max_num_nodes:
          type: number
        max_runtime:
          type: string
    inline_response_200_4:
      type: object
      properties:
        estimates_by_round:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_3'
    workflow_config_model:
      required:
      - compute_node_resource_stat_config
      type: object
      properties:
        compute_node_resource_stat_config:
          $ref: '#/components/schemas/workflow_config_compute_node_resource_stat_config'
        _key:
          type: string
        _id:
          type: string
        _rev:
          type: string
x-original-swagger-version: "2.0"
