name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  DEFAULT_PYTHON: "3.12"
  DEFAULT_OS: ubuntu-latest

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Julia
      uses: julia-actions/setup-julia@latest
      with:
        version: 1
        arch: x64
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install './torc_package[dev]'
        julia --project julia/Torc -e "import Pkg;Pkg.build()"
    - name: Setup ArangoDB
      uses: daniel-thom/arangodb-action@v1
      with:
        arangodb version: 3.11.7
    - name: Configure ArangoDB
      run: |
        apt-get update
        apt-get install -y npm zip curl docker graphviz graphviz-dev
        curl -s -X POST http://127.0.0.1:8529/_db/_system/_api/database --data '{"name":"test-workflows"}'
        cd db_service
        npm install
        zip -r - manifest.json index.js node_modules src scripts | docker exec -i arangodb_container foxx install --server http://127.0.0.1:8529 -D test-workflows /torc-service @
        bash make_api_clients.sh
        cd ..
    - name: Run pytest
      run: |
        cd torc_package
        torc config create -u http://localhost:8529/_db/test-workflows/torc-service
        python -m pytest -v --disable-warnings --cov=torc --cov-report=xml tests
    - name: codecov
      uses: codecov/codecov-action@v4.2.0
      if: ${{ matrix.os == env.DEFAULT_OS && matrix.python-version == env.DEFAULT_PYTHON  }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        name: torc-tests
        fail_ci_if_error: false
        verbose: true

  mypy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install ".[dev]"
        mypy
  ruff:
    runs-on: ubuntu-latest
    name: "ruff"
    steps:
      - uses: actions/checkout@v4
      - uses: chartboost/ruff-action@v1
        with:
          src: "./src"
