[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "torc"
dynamic = ["version"]
description = "Provides workflow automation services"
requires-python = ">=3.10,<3.12"
license = "BSD-3-Clause"
readme = "README.md"
authors = [
    { name = "Daniel Thom", email = "daniel.thom@nrel.gov" },
    { name = "Joseph McKinsey", email = "joseph.mckinsey@nrel.gov" },
]
include_package_data = true
keywords = ["hpc", "workflow"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "click",
    "graphviz",
    "json5",
    "plotly",
    "psutil",
    "prettytable",
    "pyarrow",
    "pydantic >= 2.4, < 3",
    "textual",
    "resource_monitor @ git+https://github.nrel.gov/dthom/resource_monitor.git#0.1.9",
    # These are required by the openapi_client. Keep in sync with its setup.py.
    "python_dateutil>=2.5.3",
    "urllib3>=1.25.3,<2.1.0",
]

[tool.hatch.version]
path = "torc/__init__.py"

[tool.hatch.metadata]
allow-direct-references = true

[project.optional-dependencies]
dev = [
    "black",
    "bump-pydantic",
    "flake8",
    "furo",
    "ghp-import",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "sphinx",
    "sphinx-click",
    "sphinxcontrib-openapi",
    "autodoc_pydantic~=2.0",
    "sphinx-copybutton",
    "sphinx-tabs~=3.4",
    "textual-dev",
    "types-psutil",
]
plots = ["networkx", "networkxgmml", "pygraphviz"]

[project.scripts]
torc = "torc.cli.torc:cli"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = ["tests"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "_build",
    "build",
    "dist",
    "env",
    "venv",
]

line-length = 99
indent-width = 4

target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = [
    "C901",  # McCabe complexity
    "E4",  # Subset of pycodestyle (E)
    "E7",
    "E9",
    "F",  # Pyflakes
    "W",  # pycodestyle warnings
]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]
