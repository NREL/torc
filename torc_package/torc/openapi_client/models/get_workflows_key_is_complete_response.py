# coding: utf-8

"""
    torc

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v0.2.6
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic import ConfigDict, BaseModel, Field, StrictBool

class GetWorkflowsKeyIsCompleteResponse(BaseModel):
    """
    GetWorkflowsKeyIsCompleteResponse
    """
    is_canceled: StrictBool = Field(...)
    is_complete: StrictBool = Field(...)
    __properties = ["is_canceled", "is_complete"]
    model_config = ConfigDict(populate_by_name=True, validate_assignment=True)

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> GetWorkflowsKeyIsCompleteResponse:
        """Create an instance of GetWorkflowsKeyIsCompleteResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.model_dump(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> GetWorkflowsKeyIsCompleteResponse:
        """Create an instance of GetWorkflowsKeyIsCompleteResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return GetWorkflowsKeyIsCompleteResponse.model_validate(obj)

        _obj = GetWorkflowsKeyIsCompleteResponse.model_validate({
            "is_canceled": obj.get("is_canceled"),
            "is_complete": obj.get("is_complete")
        })
        return _obj


