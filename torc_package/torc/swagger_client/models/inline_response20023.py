# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse20023(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'num_jobs': 'int',
        'num_cpus': 'int',
        'num_gpus': 'int',
        'memory_gb': 'float',
        'max_memory_gb': 'float',
        'max_num_nodes': 'int',
        'max_runtime': 'str'
    }

    attribute_map = {
        'num_jobs': 'num_jobs',
        'num_cpus': 'num_cpus',
        'num_gpus': 'num_gpus',
        'memory_gb': 'memory_gb',
        'max_memory_gb': 'max_memory_gb',
        'max_num_nodes': 'max_num_nodes',
        'max_runtime': 'max_runtime'
    }

    def __init__(self, num_jobs=None, num_cpus=None, num_gpus=None, memory_gb=None, max_memory_gb=None, max_num_nodes=None, max_runtime=None):  # noqa: E501
        """InlineResponse20023 - a model defined in Swagger"""  # noqa: E501
        self._num_jobs = None
        self._num_cpus = None
        self._num_gpus = None
        self._memory_gb = None
        self._max_memory_gb = None
        self._max_num_nodes = None
        self._max_runtime = None
        self.discriminator = None
        self.num_jobs = num_jobs
        self.num_cpus = num_cpus
        self.num_gpus = num_gpus
        self.memory_gb = memory_gb
        self.max_memory_gb = max_memory_gb
        self.max_num_nodes = max_num_nodes
        self.max_runtime = max_runtime

    @property
    def num_jobs(self):
        """Gets the num_jobs of this InlineResponse20023.  # noqa: E501


        :return: The num_jobs of this InlineResponse20023.  # noqa: E501
        :rtype: int
        """
        return self._num_jobs

    @num_jobs.setter
    def num_jobs(self, num_jobs):
        """Sets the num_jobs of this InlineResponse20023.


        :param num_jobs: The num_jobs of this InlineResponse20023.  # noqa: E501
        :type: int
        """
        if num_jobs is None:
            raise ValueError("Invalid value for `num_jobs`, must not be `None`")  # noqa: E501

        self._num_jobs = num_jobs

    @property
    def num_cpus(self):
        """Gets the num_cpus of this InlineResponse20023.  # noqa: E501


        :return: The num_cpus of this InlineResponse20023.  # noqa: E501
        :rtype: int
        """
        return self._num_cpus

    @num_cpus.setter
    def num_cpus(self, num_cpus):
        """Sets the num_cpus of this InlineResponse20023.


        :param num_cpus: The num_cpus of this InlineResponse20023.  # noqa: E501
        :type: int
        """
        if num_cpus is None:
            raise ValueError("Invalid value for `num_cpus`, must not be `None`")  # noqa: E501

        self._num_cpus = num_cpus

    @property
    def num_gpus(self):
        """Gets the num_gpus of this InlineResponse20023.  # noqa: E501


        :return: The num_gpus of this InlineResponse20023.  # noqa: E501
        :rtype: int
        """
        return self._num_gpus

    @num_gpus.setter
    def num_gpus(self, num_gpus):
        """Sets the num_gpus of this InlineResponse20023.


        :param num_gpus: The num_gpus of this InlineResponse20023.  # noqa: E501
        :type: int
        """
        if num_gpus is None:
            raise ValueError("Invalid value for `num_gpus`, must not be `None`")  # noqa: E501

        self._num_gpus = num_gpus

    @property
    def memory_gb(self):
        """Gets the memory_gb of this InlineResponse20023.  # noqa: E501


        :return: The memory_gb of this InlineResponse20023.  # noqa: E501
        :rtype: float
        """
        return self._memory_gb

    @memory_gb.setter
    def memory_gb(self, memory_gb):
        """Sets the memory_gb of this InlineResponse20023.


        :param memory_gb: The memory_gb of this InlineResponse20023.  # noqa: E501
        :type: float
        """
        if memory_gb is None:
            raise ValueError("Invalid value for `memory_gb`, must not be `None`")  # noqa: E501

        self._memory_gb = memory_gb

    @property
    def max_memory_gb(self):
        """Gets the max_memory_gb of this InlineResponse20023.  # noqa: E501


        :return: The max_memory_gb of this InlineResponse20023.  # noqa: E501
        :rtype: float
        """
        return self._max_memory_gb

    @max_memory_gb.setter
    def max_memory_gb(self, max_memory_gb):
        """Sets the max_memory_gb of this InlineResponse20023.


        :param max_memory_gb: The max_memory_gb of this InlineResponse20023.  # noqa: E501
        :type: float
        """
        if max_memory_gb is None:
            raise ValueError("Invalid value for `max_memory_gb`, must not be `None`")  # noqa: E501

        self._max_memory_gb = max_memory_gb

    @property
    def max_num_nodes(self):
        """Gets the max_num_nodes of this InlineResponse20023.  # noqa: E501


        :return: The max_num_nodes of this InlineResponse20023.  # noqa: E501
        :rtype: int
        """
        return self._max_num_nodes

    @max_num_nodes.setter
    def max_num_nodes(self, max_num_nodes):
        """Sets the max_num_nodes of this InlineResponse20023.


        :param max_num_nodes: The max_num_nodes of this InlineResponse20023.  # noqa: E501
        :type: int
        """
        if max_num_nodes is None:
            raise ValueError("Invalid value for `max_num_nodes`, must not be `None`")  # noqa: E501

        self._max_num_nodes = max_num_nodes

    @property
    def max_runtime(self):
        """Gets the max_runtime of this InlineResponse20023.  # noqa: E501


        :return: The max_runtime of this InlineResponse20023.  # noqa: E501
        :rtype: str
        """
        return self._max_runtime

    @max_runtime.setter
    def max_runtime(self, max_runtime):
        """Sets the max_runtime of this InlineResponse20023.


        :param max_runtime: The max_runtime of this InlineResponse20023.  # noqa: E501
        :type: str
        """
        if max_runtime is None:
            raise ValueError("Invalid value for `max_runtime`, must not be `None`")  # noqa: E501

        self._max_runtime = max_runtime

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20023, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20023):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
